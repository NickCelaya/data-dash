{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","directives/doughnutDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/mapDirective.js","directives/pieDirective.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js"],"names":["AA","angular","module","controller","$scope","$interval","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","$applyAsync","console","log","service","$http","baseUrl","getData","method","url","then","response","results","result","package","item","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","options","chartElement","dataForChart","Chart","$watch","newValue","oldValue","responsive","maintainAspectRatio","legend","display","title","text","crimeService","getInfo","homeValueService","hospitalService","pollutionService","rentService","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","studio_county","one_bed_county","two_bed_county","three_bed_county","four_bed_county","assignData","stackedBarData","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\nAA.controller(\"mainCtrl\", function ($scope, $interval) {\n\n  $scope.baseball = {\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255,99,132,1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'apples',\n      data: [12, 19, 3, 17, 6, 3, 7],\n      backgroundColor: \"rgba(153,255,51,0.4)\"\n    }, {\n      label: 'oranges',\n      data: [2, 29, 5, 5, 2, 3, 10],\n      backgroundColor: \"rgba(255,153,0,0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#2ecc71\", \"#3498db\", \"#95a5a6\", \"#9b59b6\", \"#f1c40f\", \"#e74c3c\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n      data: [2478, 5267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#2ecc71\", \"#3498db\", \"#95a5a6\", \"#9b59b6\", \"#f1c40f\", \"#e74c3c\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  $interval(function () {\n    $scope.$applyAsync(function () {\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/species\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('doughnutDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/doughnut.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n          // {\n          //   legend: {\n          //     display: false,\n          //     labels: {\n          //       display: false\n          //     }\n          //   },\n          //   scales: {\n          //     yAxes: [\n          //       {\n          //         ticks: {\n          //           beginAtZero: true\n          //         }\n          //       }\n          //     ]\n          //   }\n          // }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              display: false,\n              labels: {\n                display: false\n              }\n            },\n            title: {\n              display: false,\n              text: 'Predicted world population (millions) in 2050'\n            }\n            // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n            // }   ] }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.onBoardDataStudio;\n  $scope.onBoardDataOne;\n  $scope.onBoardDataTwo;\n  $scope.onBoardDataThree;\n  $scope.onBoardDataFour;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.onBoardDataStudio = response.studio_county;\n      $scope.onBoardDataOne = response.one_bed_county;\n      $scope.onBoardDataTwo = response.two_bed_county;\n      $scope.onBoardDataThree = response.three_bed_county;\n      $scope.onBoardDataFour = response.four_bed_county;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.stackedBarData = {\n      labels: ['S', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'apartments',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n        // 5, 10, -3, 7, -6\n        ],\n        backgroundColor: \"rgba(153,255,51,0.4)\"\n      }]\n    };\n    console.log($scope.stackedBarData);\n  };\n\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          // beginAtZero: true,\n          stepSize: 50\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\nAA.controller(\"mainCtrl\", function($scope, $interval){\n    \n  $scope.baseball = {\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n        'rgba(255, 159, 64, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'apples',\n      data: [12, 19, 3, 17, 6, 3, 7],\n      backgroundColor: \"rgba(153,255,51,0.4)\"\n    }, {\n      label: 'oranges',\n      data: [2, 29, 5, 5, 2, 3, 10],\n      backgroundColor: \"rgba(255,153,0,0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#2ecc71\",\n        \"#3498db\",\n        \"#95a5a6\",\n        \"#9b59b6\",\n        \"#f1c40f\",\n        \"#e74c3c\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [{\n        label: \"Population (millions)\",\n        backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n        data: [2478,5267,734,784,433]\n      }]\n    };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#2ecc71\",\n        \"#3498db\",\n        \"#95a5a6\",\n        \"#9b59b6\",\n        \"#f1c40f\",\n        \"#e74c3c\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n  $interval(() => {\n    $scope.$applyAsync(() => {\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/species\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('doughnutDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/doughnut.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: \n            options\n            // {\n            //   legend: {\n            //     display: false,\n            //     labels: {\n            //       display: false\n            //     }\n            //   },\n            //   scales: {\n            //     yAxes: [\n            //       {\n            //         ticks: {\n            //           beginAtZero: true\n            //         }\n            //       }\n            //     ]\n            //   }\n            // }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n        function getChartGivenData(chartElement, dataForChart, type) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n                  display: false\n                }\n              },\n              title: {\n                display: false,\n                text: 'Predicted world population (millions) in 2050'\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });","AA.controller(\"crimeCtrl\", function($scope, crimeService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  crimeService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo(); \n\n\n\n//end of controller\n});\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA\n  .controller(\"rentCtrl\", function ($scope, rentService) {\n\n    $scope.onBoardDataStudio;\n    $scope.onBoardDataOne;\n    $scope.onBoardDataTwo;\n    $scope.onBoardDataThree;\n    $scope.onBoardDataFour;\n\n    $scope.getInfo = () => {\n      rentService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.onBoardDataStudio = response.studio_county;\n          $scope.onBoardDataOne = response.one_bed_county;\n          $scope.onBoardDataTwo = response.two_bed_county;\n          $scope.onBoardDataThree = response.three_bed_county;\n          $scope.onBoardDataFour = response.four_bed_county;\n          $scope.assignData();\n        })\n    }\n\n    $scope.getInfo();\n\n    $scope.assignData = function () {\n      $scope.stackedBarData = {\n        labels: [\n          'S', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'apartments',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n              // 5, 10, -3, 7, -6\n            ],\n            backgroundColor: \"rgba(153,255,51,0.4)\"\n          }\n        ]\n      };\n         console.log($scope.stackedBarData);\n    }\n\n \n\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // beginAtZero: true,\n              stepSize: 50\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n"]}