{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/doughnutDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","controller","$scope","$interval","zipConversionService","clearData","city","zipcode","state","console","log","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","$applyAsync","tempPlace","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","initAutocomplete","google","maps","places","Autocomplete","document","getElementById","types","addListener","fillInAddress","place","getPlace","address_components","long_name","inputValidation","geolocate","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","index","length","short_name","undefined","alert","getData","then","foundData","findData","info","crimeService","assault","burglary","larceny","murder","motorVehicleTheft","personalCrime","property","rape","robbery","assignData","crimeData","crimeOptions","responsive","maintainAspectRatio","legend","display","homeValueService","avgsaleprice","getInfo","response","propertySalePrice","hospitalService","pollutionService","airPollutionIndex","aqi","rentService","someFunction","$on","event","medianRentData","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","options","lables","beginAtZero","$watch","newValue","oldValue","service","$http","baseUrl","obj","method","url","result","package","item","results","$rootScope","$broadcast"],"mappings":"AAAA;;;;;ACGA,IAAMA,KAAKC,QAAQC,OAAO,aAAa;;;;ADMvC;;;;;;AELAF,GAAGG,WAAW,4DAAY,UAAUC,QAAQC,WAAWC,sBAAsB;EAC3EF,OAAOG,YAAY,YAAW;IAC5BH,OAAOI,OAAO;IACdJ,OAAOK,UAAU;IACjBL,OAAOM,QAAQ;IACfC,QAAQC,IAAI;;;EAGdR,OAAOS,UAAU;;EAEjBT,OAAOU,WAAW;IAChBC,QAAQ,CAAC,OAAO,UAAU,UAAU,UAAU,QAAQ,UAAU,WAAW;IAC3EC,UAAU,CAAC;MACTC,OAAO;MACPC,MAAM,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;MACjDC,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA,yBACA;MAEFC,aAAa,CACX,yBACA,0BACA,uBACA,wBACA,0BACA,uBACA,uBACA;MAEFC,aAAa;;;;EAIjBjB,OAAOkB,WAAW;IAChBP,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;IACvCC,UAAU,CAAC;MACTC,OAAO;MACPC,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG;MAC5BC,iBAAiB;OAChB;MACDF,OAAO;MACPC,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG;MAC3BC,iBAAiB;;;;EAIrBf,OAAOmB,QAAQ;IACbR,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;IACvCC,UAAU,CAAC;MACTG,iBAAiB,CACf,WACA,WACA,WACA,WACA,WACA,WACA;MAEFD,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;;;;EAIlCd,OAAOoB,SAAS;IACdT,QAAQ,CAAC,YAAY,YAAY,YAAY,YAAY;IACzDC,UAAU,CAAC;MACTC,OAAO;MACPE,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA;MAEFD,MAAM,CAAC,KAAK,MAAM,KAAK,KAAK;;;;EAIhCd,OAAOqB,QAAQ;IACbV,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;IACvCC,UAAU,CAAC;MACTG,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA;MAEFD,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;;;;EAIlCd,OAAOsB,aAAa;EACpBtB,OAAOuB,aAAa;EACpBvB,OAAOwB,aAAa;EACpBxB,OAAOyB,aAAa;EACpBzB,OAAO0B,aAAa;EACpB1B,OAAO2B,aAAa;;;EAIpB1B,UAAU,YAAM;IACdD,OAAO4B,YAAY,YAAM;;;MAGvB5B,OAAOsB,aAAatB,OAAOsB,eAAe,QAAQ,QAAQ;MAC1DtB,OAAOuB,aAAavB,OAAOsB,eAAe,QAAQ,QAAQ;MAC1Df,QAAQC,IAAIR,OAAOsB,YAAYtB,OAAOuB;MACtCvB,OAAOwB,aAAaxB,OAAOwB,eAAe,aAAa,aAAa;MACpExB,OAAOyB,aAAazB,OAAOwB,eAAe,aAAa,aAAa;MACpExB,OAAO0B,aAAa1B,OAAO0B,eAAe,cAAc,UAAU;MAClE1B,OAAO2B,aAAa3B,OAAO0B,eAAe,cAAc,UAAU;;KAEnE;;;;;;;;;;;;;;;;;;;;;;;EAuBH1B,OAAOI;EACPJ,OAAOK;EACPL,OAAO6B;;;;;;;;;EASP,IAAIC,aAAaC;EACjB,IAAIC,gBAAgB;IAClBC,eAAe;IACfC,OAAO;IACPC,UAAU;IACVC,6BAA6B;IAC7BC,SAAS;IACTC,aAAa;;;EAGf,SAASC,mBAAmB;;;IAG1BvC,OAAOI,OAAO;IACdJ,OAAOK,UAAU;IACjBL,OAAOM,QAAQ;;;;IAKfyB,eAAe,IAAIS,OAAOC,KAAKC,OAAOC;;IAEnCC,SAASC,eAAe,iBAAkB;MACzCC,OAAO,CAAC;;;;;IAKZf,aAAagB,YAAY,iBAAiBC;;;EAG5C,SAASA,gBAAgB;;IAEvB,IAAIC,QAAQlB,aAAamB;;IAEzB3C,QAAQC,IAAI,2BAA2ByC;IACvCjD,OAAO6B,YAAYoB;IACnB1C,QAAQC,IAAI,oCAAoCR,OAAO6B,UAAUsB,mBAAmB,GAAGC;;;IAGvFC;;;;;EAKF,SAASC,YAAY;;IAEnB/C,QAAQC,IAAI;;IAEZ,IAAI+C,UAAUC,aAAa;MACzBD,UAAUC,YAAYC,mBAAmB,UAAUC,UAAU;QAC3D,IAAIF,cAAc;UAChBG,KAAKD,SAASE,OAAOC;UACrBC,KAAKJ,SAASE,OAAOG;;QAEvB,IAAIC,SAAS,IAAIxB,OAAOC,KAAKwB,OAAO;UAClCC,QAAQV;UACRW,QAAQT,SAASE,OAAOQ;;QAE1BrC,aAAasC,UAAUL,OAAOM;;;;;EAKpC,IAAMjB,kBAAkB,SAAlBA,kBAAwB;IAC5B,KAAK,IAAIkB,QAAQ,GAAGA,QAAQvE,OAAO6B,UAAUsB,mBAAmBqB,QAAQD,SAAS;MAC/E,IAAIvE,OAAO6B,UAAUsB,mBAAmBoB,OAAOzB,MAAM,OAAO,YAAY;QACtE9C,OAAOI,OAAOJ,OAAO6B,UAAUsB,mBAAmBoB,OAAOnB;;;MAG3D,IAAIpD,OAAO6B,UAAUsB,mBAAmBoB,OAAOzB,MAAM,OAAO,eAAe;QACzE9C,OAAOK,UAAUL,OAAO6B,UAAUsB,mBAAmBoB,OAAOnB;;;MAG9D,IAAIpD,OAAO6B,UAAUsB,mBAAmBoB,OAAOzB,MAAM,OAAO,+BAA+B;QACzF9C,OAAOM,QAAQN,OAAO6B,UAAUsB,mBAAmBoB,OAAOE;;;MAG5D,IAAIzE,OAAOI,SAASsE,aAAa1E,OAAOK,YAAYqE,WAAW;QAC7DC,MAAM;;;;IAIV,IAAI3E,OAAOI,QAAQJ,OAAOM,OAAO;MAC/BJ,qBAAqB0E,QAAQ,EAACxE,MAAMJ,OAAOI,MAAME,OAAON,OAAOM,SAAQuE,KAAK,UAAA,UAAY;QACtF7E,OAAO8E,YAAY5E,qBAAqB6E;QACxCxE,QAAQC,IAAIR,OAAO8E;;;;IAIvBvE,QAAQyE,KAAK,uBAAuBhF,OAAOI;IAC3CG,QAAQyE,KAAK,0BAA0BhF,OAAOK;IAC9CE,QAAQyE,KAAK,wBAAwBhF,OAAOM;;;;EAK9CgD;EACAf;;;;;;;;;;;;;;;;;;;;;;AFZF;;AGtPA3C,GAAGG,WAAW,wCAAa,UAAUC,QAAQiF,cAAc;;EAEvDjF,OAAOkF;EACPlF,OAAOmF;EACPnF,OAAOoF;EACPpF,OAAOqF;EACPrF,OAAOsF;EACPtF,OAAOuF;EACPvF,OAAOwF;EACPxF,OAAOyF;EACPzF,OAAO0F;;;;;;;;;;;;;;;;;;;;;;;EAuBP1F,OAAO2F,aAAa,YAAW;;IAE7B3F,OAAO4F,YAAY;MACjBjF,QAAQ,CAAC,WAAW,YAAY,WAAW,UAAU,cAAc,kBAAkB,YAAY,QAAQ;MACzGC,UAAU,CAAC;QACTG,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA;QAEFD,MACA,CAACd,OAAOkF,SAASlF,OAAOmF,UAAUnF,OAAOoF,SAASpF,OAAOqF,QAAQrF,OAAOsF,mBAAmBtF,OAAOuF,eAAevF,OAAOwF,UAAUxF,OAAOyF,MAAMzF,OAAO0F;;;;;EAK5J1F,OAAO6F,eAAe;IACpBC,YAAY;IACZC,qBAAqB;IACrBC,QAAQ;MACNC,SAAS;MACTtF,QAAQ;QACNsF,SAAS;;;;;;AHqPnB;;AIhTArG,GAAGG,WAAW,gDAAiB,UAASC,QAAQkG,kBAAiB;;EAE/DlG,OAAOmG;;EAEPnG,OAAOc;;EAEPd,OAAOoG,UAAU,YAAM;IACrBF,iBACGtB,UACAC,KAAK,UAACwB,UAAa;MAClB9F,QAAQC,IAAI6F;MACZrG,OAAOmG,eAAeE,SAASF;MAC/BnG,OAAO2F;;;;EAIb3F,OAAOoG;;EAEPpG,OAAO2F,aAAa,YAAW;IAC7B3F,OAAOsG,oBAAoBtG,OAAOmG;;;;;AJqTtC;;AKxUAvG,GAAGG,WAAW,8CAAgB,UAASC,QAAQuG,iBAAgB;;EAE/DvG,OAAOc;;EAEPd,OAAOoG,UAAU,YAAM;IACrBG,gBAAgB3B,UAAUC,KAAM,UAACwB,UAAa;MAC5C9F,QAAQC,IAAI6F;MACZrG,OAAOc,OAAOuF;;;;EAIlBrG,OAAOoG;;AL4UP;;AMvVAxG,GAAGG,WAAW,gDAAiB,UAASC,QAAQwG,kBAAiB;;EAEjExG,OAAOyG;;EAEPzG,OAAOc;;EAEPd,OAAOoG,UAAU,YAAM;IACtBI,iBAAiB5B,UAAUC,KAAM,UAACwB,UAAa;MAC7CrG,OAAOyG,oBAAoBJ,SAASK;;;;EAIvC1G,OAAOoG;;AN2VP;;AOvWAxG,GACGG,WAAW,8DAAY,UAAUC,QAAQ2G,aAAazG,sBAAsB;EAC3EF,OAAOc,OAAOZ,qBAAqB6E;;EAEnC/E,OAAO4G,eAAe,YAAY;;IAEhCrG,QAAQC,IAAI;;;EAGdR,OAAO6G,IAAI,cAAc,UAAUC,OAAOhG,MAAM;IAC9CP,QAAQC,IAAI,yBAAyBM;;;;;;;;;;;;;;;;;;;;;;;;;EAyBvCd,OAAO2F,aAAa,YAAY;IAC9B3F,OAAO+G,iBAAiB;MACtBpG,QAAQ,CACN,OAAO,OAAO,OAAO,OAAO;MAE9BC,UAAU,CAAC;QACTC,OAAO;QACPC,MAAM,CACJd,OAAOgH,mBAAmBhH,OAAOiH,gBAAgBjH,OAAOkH,gBAAgBlH,OAAOmH,kBAAkBnH,OAAOoH;QAE1GrG,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA,yBACA;QAEFC,aAAa,CACX,yBACA,0BACA,uBACA,wBACA,0BACA,uBACA,uBACA;QAEFC,aAAa;;;;;EAKnBjB,OAAOqH,aAAa;IAClBrB,QAAQ;MACNC,SAAS;MACTtF,QAAQ;QACNsF,SAAS;;;IAGbqB,QAAQ;MACNC,OAAO,CAAC;QACNC,OAAO;UACLC,UAAU;;QAEZC,SAAS;;MAEXC,OAAO,CAAC;QACND,SAAS;;;;;;APwVnB;;AQ7aA9H,GAAGG,WAAW,kDAAkB,UAASC,QAAQ4H,mBAAkB;;EAEnE5H,OAAOc;;EAEPd,OAAOoG,UAAU,YAAM;IACrBwB,kBAAkBhD,UAAUC,KAAM,UAACwB,UAAa;MAC9C9F,QAAQC,IAAI6F;MACZrG,OAAOc,OAAOuF;;;;EAIlBrG,OAAOoG;;ARibP;;;AS3bAxG,GAAGiI,UAAU,qBAAqB,YAAW;EAC3C,OAAO;IACLC,UAAU;IACVC,aAAa;;IAEbC,OAAO;MACLC,WAAW;MACXC,MAAM;;IAERC,MAAM,SAAA,KAASH,OAAOI,MAAMC,OAAOC,MAAM;MACvC/H,QAAQC,IAAI,uCAAuC4H,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAEhF,IAAIC,SAASJ,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAE1C,IAAIE,aAAaC,kBAAkBF,QAAQR,MAAMC,WAAWD,MAAME;;MAElE,SAASQ,kBAAkBC,cAAcC,cAAcV,MAAM;QAC3D,OAAO,IAAIW,MACTF,cACA;UACET,MAAMA;UACNpH,MAAM8H;UACNE,SAAS;YACP9C,QAAQ;cACNC,SAAQ;cACR8C,QAAQ;gBACN9C,SAAS;;;YAGbqB,QAAQ;cACNC,OAAO,CAAC;gBACNC,OAAO;kBACLwB,aAAa;;;;;;;;MAS3BhB,MAAMiB,OAAO,QAAQ,UAASC,UAAUC,UAAUnB,OAAM;QACtDU,kBAAkBF,QAAQR,MAAMC,WAAWiB;;;;;;;ATkcnD;;;AU5eAtJ,GAAGiI,UAAU,mBAAmB,YAAY;;EAE1C,OAAO;IACLC,UAAU;IACVC,aAAa;;;;AVmfjB;;;AWvfAnI,GAAGiI,UAAU,mBAAmB,YAAY;;EAE1C,OAAO;IACLC,UAAU;IACVC,aAAa;;;;AX8fjB;;;AYlgBAnI,GACGiI,UAAU,iBAAiB,YAAY;EACtC,OAAO;IACLC,UAAU,KAAKC,aAAa;;IAE5BC,OAAO;MACLC,WAAW;MACXC,MAAM;;IAERC,MAAM,SAAA,KAAUH,OAAOI,MAAMC,OAAOC,MAAM;MACxC/H,QAAQC,IAAI,uCAAuC4H,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAEhF,IAAIC,SAASJ,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAE1C,IAAIE,aAAaC,kBAAkBF,QAAQR,MAAMC,WAAWD,MAAME,MAAMF,MAAMc;;MAE9E,SAASJ,kBAAkBC,cAAcC,cAAcV,MAAMY,SAAS;QACpE,OAAO,IAAID,MAAMF,cAAc;UAC7BT,MAAMA;UACNpH,MAAM8H;UACNE,SAAS;YACP9C,QAAQ;cACNC,SAAS;cACTtF,QAAQ;;gBAENsF,SAAS;;;YAGbqB,QAAQ;cACNC,OAAO,CACL;gBACEC,OAAO;kBACLwB,aAAa;;;;;;;;MAS3BhB,MACGiB,OAAO,QAAQ,UAAUC,UAAUC,UAAUnB,OAAO;QACnDU,kBAAkBF,QAAQR,MAAMC,WAAWiB;;;;;;;;AZygBvD;;;AapjBAtJ,GAAGiI,UAAU,gBAAgB,YAAY;;EAEvC,OAAO;IACLC,UAAU;IACVC,aAAa;;;;Ab2jBjB;;AchkBAnI,GACGiI,UAAU,gBAAgB,YAAY;EACrC,OAAO;IACLC,UAAU,KAAKC,aAAa;;IAE5BC,OAAO;MACLC,WAAW;MACXC,MAAM;MACNY,SAAS;;IAEXX,MAAM,SAAA,KAAUH,OAAOI,MAAMC,OAAOC,MAAM;;;MAGxC,IAAIE,SAASJ,KAAK,GAAGG,SAAS,GAAGA,SAAS;MAC1C,IAAIE,aAAaC,kBAAkBF,QAAQR,MAAMC,WAAWD,MAAME,MAAMF,MAAMc;;MAE9E,SAASJ,kBAAkBC,cAAcC,cAAcV,MAAMY,SAAS;QACpE,OAAO,IAAID,MAAMF,cAAc;UAC7BT,MAAMA;UACNpH,MAAM8H;UACNE,SAASA;;;;MAIbd,MACGiB,OAAO,aAAa,UAAUC,UAAUC,UAAUnB,OAAO;QACxDU,kBAAkBF,QAAQU,UAAUlB,MAAME,MAAMF,MAAMc;;;;;AdqkBlE;;Ae/lBAlJ,GAAGwJ,QAAQ,0BAAgB,UAASC,OAAM;;EAE1C,IAAMC,UAAU;;EAEhB,KAAK1E,UAAU,UAAC2E,KAAQ;IACtB,OAAOF,MAAM;MACXG,QAAQ;MACRC,KAAKH;MACLxI,MAAMyI;OACL1E,KAAM,UAACwB,UAAa;;MAErB,OAAOA,SAASvF,KAAKuF,SAASqD,OAAOC,QAAQC;;;;;;AfumBjD;;AgBlnBAhK,GAAGwJ,QAAQ,8BAAoB,UAASC,OAAM;;EAE5C,IAAMC,UAAU;;EAEhB,KAAK1E,UAAU,YAAM;IACnB,OAAOyE,MAAM;MACXG,QAAQ;MACRC,KAAKH;OACJzE,KAAM,UAACwB,UAAa;MACrB9F,QAAQC,IAAI6F;MACZ,OAAOA,SAASvF,KAAKuF,SAASqD,OAAOC,QAAQC;;;;;;AhB0nBnD;;AiBpoBAhK,GAAGwJ,QAAQ,6BAAmB,UAASC,OAAM;;EAE7C,IAAMC,UAAU;;EAGhB,KAAK1E,UAAU,YAAM;IACnB,OAAOyE,MAAM;MACXG,QAAQ;MACRC,KAAKH;OACJzE,KAAM,UAACwB,UAAa;MACrB9F,QAAQC,IAAI6F,SAASvF,KAAK+I;MAC1B,OAAOxD,SAASvF,KAAK+I;;;;;;AjB2oBzB;;AkBtpBAjK,GAAGwJ,QAAQ,8BAAoB,UAASC,OAAM;;EAE9C,IAAMC,UAAU;;EAEhB,KAAK1E,UAAU,YAAM;IACnB,OAAOyE,MAAM;MACXG,QAAQ;MACRC,KAAKH;OACJzE,KAAM,UAACwB,UAAa;MACrB,OAAOA,SAASvF,KAAKA,KAAK;;;;;;;;;;;;;;;;AlBwqB9B;;AmBjrBAlB,GAAGwJ,QAAQ,yBAAe,UAASC,OAAM;;EAEzC,IAAMC,UAAU;;EAGhB,KAAK1E,UAAU,YAAM;IACnB,OAAOyE,MAAM;MACXG,QAAQ;MACRC,KAAKH;OACJzE,KAAM,UAACwB,UAAa;MACrB9F,QAAQC,IAAI6F,SAASvF,KAAKuF,SAASqD,OAAOC,QAAQC;MAClD,OAAOvD,SAASvF,KAAKuF,SAASqD,OAAOC,QAAQC;;;;;;AnBwrBjD;;AoBnsBAhK,GAAGwJ,QAAQ,+BAAqB,UAASC,OAAM;;EAE/C,IAAMC,UAAU;;EAGhB,KAAK1E,UAAU,YAAM;IACnB,OAAOyE,MAAM;MACXG,QAAQ;MACRC,KAAKH;OACJzE,KAAM,UAACwB,UAAa;MACrB9F,QAAQC,IAAI6F,SAASvF,KAAK+I;MAC1B,OAAOxD,SAASvF,KAAK+I;;;;;;ApB0sBzB;;AqBrtBAjK,GAAGwJ,QAAQ,gDAAwB,UAAUC,OAAOS,YAAY;EAAA,IAAA,QAAA;;EAE9D,IAAMR,UAAU;;EAGhB,KAAK1E,UAAU,UAAC2E,KAAQ;IACtB,OAAOF,MAAM;MACXG,QAAQ;MACRC,KAAKH;MACLxI,MAAMyI;OACL1E,KAAK,UAACwB,UAAa;MACpB,MAAKvF,OAAOuF,SAASvF,KAAKuF,SAASqD,OAAOC,QAAQC;MAClD,OAAOvD,SAASvF,KAAKuF,SAASqD,OAAOC,QAAQC;;;;EAIjD,KAAK7E,WAAW,YAAM;IACpB+E,WAAWC,WAAW,cAAc;MAClCjJ,MAAM,MAAKA;;;;IAlBjB","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n'use strict';\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n    console.log(\"it works!\");\n  };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  // START: THIS NEEDS RIPPING OUT !! -- !! ------------------------------------\n  $interval(function () {\n    $scope.$applyAsync(function () {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'bar' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'bar' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'doughnut' ? 'doughnut' : 'doughnut';\n      $scope.chart4Type = $scope.chart3Type === 'doughnut' ? 'doughnut' : 'doughnut';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n    });\n  }, 10000);\n  // END: THIS NEEDS RIPPING OUT !! -- !! --------------------------------------\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n    /** @type {!HTMLInputElement} */\n    document.getElementById('autocomplete'), {\n      types: ['geocode']\n    });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  var inputValidation = function inputValidation() {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.getData({ city: $scope.city, state: $scope.state }).then(function (response) {\n        $scope.foundData = zipConversionService.findData();\n        console.log($scope.foundData);\n      });\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n  };\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n  $scope.assault;\n  $scope.burglary;\n  $scope.larceny;\n  $scope.murder;\n  $scope.motorVehicleTheft;\n  $scope.personalCrime;\n  $scope.property;\n  $scope.rape;\n  $scope.robbery;\n\n  // $scope.getInfo = () => {\n  //   crimeService\n  //     .getData()\n  //     .then((response) => {\n  //       console.log(response);\n  //       $scope.assault = response.crmcyasst;\n  //       $scope.burglary = response.crmcyburg;\n  //       $scope.larceny = response.crmcylarc;\n  //       $scope.murder = response.crmcymurd;\n  //       $scope.motorVehicleTheft = response.crmcymveh;\n  //       $scope.personalCrime = response.crmcyperc;\n  //       $scope.property = response.crmcyproc;\n  //       $scope.rape = response.crmcyrape;\n  //       $scope.robbery = response.crmcyrobb;\n  //       $scope.assignData();\n  //\n  //     })\n  // }\n  //\n  // $scope.getInfo();\n\n  $scope.assignData = function () {\n\n    $scope.crimeData = {\n      labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"robbery\"],\n      datasets: [{\n        backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      }]\n    };\n  };\n\n  $scope.crimeOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.avgsaleprice;\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.avgsaleprice = response.avgsaleprice;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.airPollutionIndex;\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      $scope.airPollutionIndex = response.aqi;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($scope, rentService, zipConversionService) {\n  $scope.data = zipConversionService.findData();\n\n  $scope.someFunction = function () {\n    // Some Code Here\n    console.log('We got zipcode data');\n  };\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log('We got zipcode data: ', data);\n  });\n\n  // $scope.onBoardDataStudio;\n  // $scope.onBoardDataOne;\n  // $scope.onBoardDataTwo;\n  // $scope.onBoardDataThree;\n  // $scope.onBoardDataFour;\n\n  // $scope.getInfo = () => {\n  //   rentService\n  //     .getData()\n  //     .then((response) => {\n  //       console.log(response);\n  //       $scope.onBoardDataStudio = response.studio_county;\n  //       $scope.onBoardDataOne = response.one_bed_county;\n  //       $scope.onBoardDataTwo = response.two_bed_county;\n  //       $scope.onBoardDataThree = response.three_bed_county;\n  //       $scope.onBoardDataFour = response.four_bed_county;\n  //       $scope.assignData();\n  //     })\n  // };\n  //\n  // $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['Stu', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'Rent P/M $',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour],\n        backgroundColor: ['rgba(33, 125, 216, 0.5)', 'rgba(165, 171, 175, 0.5)', 'rgba(4, 82, 160, 0.5)', 'rgba(14, 58, 102, 0.5)', 'rgba(128, 172, 216, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)'],\n        borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n        borderWidth: 1\n      }]\n    };\n    //  console.log($scope.medianRentData);\n  };\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          stepSize: 50\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('doughnutDirective', function () {\n  return {\n    restrict: 'E',\n    templateUrl: \"./../views/doughnut.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              lables: {\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: '='\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      // console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n        });\n      }\n\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      // console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"POST\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"/api/pollution\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      return response.data.data[0];\n    });\n  };\n  //end of service\n});\n\n/* \nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"POST\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http, $rootScope) {\n  var _this = this;\n\n  var baseUrl = \"/api/zipConversion\";\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      _this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    });\n  };\n\n  this.findData = function () {\n    $rootScope.$broadcast('eventFired', {\n      data: _this.data\n    });\n  };\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function() {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n    console.log(\"it works!\");\n  }\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  \n  // START: THIS NEEDS RIPPING OUT !! -- !! ------------------------------------\n  $interval(() => {\n    $scope.$applyAsync(() => {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'bar' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'bar' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'doughnut' ? 'doughnut' : 'doughnut';\n      $scope.chart4Type = $scope.chart3Type === 'doughnut' ? 'doughnut' : 'doughnut';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n    });\n  }, 10000);\n  // END: THIS NEEDS RIPPING OUT !! -- !! --------------------------------------\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n      /** @type {!HTMLInputElement} */\n      (document.getElementById('autocomplete')), {\n        types: ['geocode']\n      });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  const inputValidation = () => {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.getData({city: $scope.city, state: $scope.state}).then(response => {\n        $scope.foundData = zipConversionService.findData();\n        console.log($scope.foundData);\n      });\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n\n  };\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n\n\n\n// $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n    $scope.assault;\n    $scope.burglary;\n    $scope.larceny;\n    $scope.murder;\n    $scope.motorVehicleTheft;\n    $scope.personalCrime;\n    $scope.property;\n    $scope.rape;\n    $scope.robbery;\n\n    // $scope.getInfo = () => {\n    //   crimeService\n    //     .getData()\n    //     .then((response) => {\n    //       console.log(response);\n    //       $scope.assault = response.crmcyasst;\n    //       $scope.burglary = response.crmcyburg;\n    //       $scope.larceny = response.crmcylarc;\n    //       $scope.murder = response.crmcymurd;\n    //       $scope.motorVehicleTheft = response.crmcymveh;\n    //       $scope.personalCrime = response.crmcyperc;\n    //       $scope.property = response.crmcyproc;\n    //       $scope.rape = response.crmcyrape;\n    //       $scope.robbery = response.crmcyrobb;\n    //       $scope.assignData();\n    //\n    //     })\n    // }\n    //\n    // $scope.getInfo();\n\n    $scope.assignData = function() {\n\n      $scope.crimeData = {\n        labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"robbery\"],\n        datasets: [{\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.8)',\n            'rgba(165, 171, 175, 0.8)',\n            'rgba(4, 82, 160, 0.8)',\n            'rgba(14, 58, 102, 0.8)',\n            'rgba(128, 172, 216, 0.8)',\n            'rgba(72, 72, 72, 0.8)',\n            'rgba(72, 72, 72, 0.8)'\n          ],\n          data:\n          [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery],\n        }]\n      };\n    };\n\n    $scope.crimeOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      }\n    };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n  $scope.avgsaleprice;\n\n  $scope.data;\n\n  $scope.getInfo = () => {\n    homeValueService\n      .getData()\n      .then((response) => {\n        console.log(response);\n        $scope.avgsaleprice = response.avgsaleprice;\n        $scope.assignData();\n      })\n  }\n\n  $scope.getInfo();\n\n  $scope.assignData = function() {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  }\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.airPollutionIndex;\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   $scope.airPollutionIndex = response.aqi;\n })\n}\n\n$scope.getInfo();\n});\n","AA\n  .controller(\"rentCtrl\", function ($scope, rentService, zipConversionService) {\n    $scope.data = zipConversionService.findData();\n\n    $scope.someFunction = function () {\n      // Some Code Here\n      console.log('We got zipcode data');\n    };\n\n    $scope.$on('eventFired', function (event, data) {\n      console.log('We got zipcode data: ', data);\n    });\n\n    // $scope.onBoardDataStudio;\n    // $scope.onBoardDataOne;\n    // $scope.onBoardDataTwo;\n    // $scope.onBoardDataThree;\n    // $scope.onBoardDataFour;\n\n    // $scope.getInfo = () => {\n    //   rentService\n    //     .getData()\n    //     .then((response) => {\n    //       console.log(response);\n    //       $scope.onBoardDataStudio = response.studio_county;\n    //       $scope.onBoardDataOne = response.one_bed_county;\n    //       $scope.onBoardDataTwo = response.two_bed_county;\n    //       $scope.onBoardDataThree = response.three_bed_county;\n    //       $scope.onBoardDataFour = response.four_bed_county;\n    //       $scope.assignData();\n    //     })\n    // };\n    //\n    // $scope.getInfo();\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'Stu', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [{\n          label: 'Rent P/M $',\n          data: [\n            $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n          ],\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.5)',\n            'rgba(165, 171, 175, 0.5)',\n            'rgba(4, 82, 160, 0.5)',\n            'rgba(14, 58, 102, 0.5)',\n            'rgba(128, 172, 216, 0.5)',\n            'rgba(72, 72, 72, 0.5)',\n            'rgba(72, 72, 72, 0.5)',\n            'rgba(72, 72, 72, 0.5)'\n          ],\n          borderColor: [\n            'rgba(33, 125, 216, 1)',\n            'rgba(165, 171, 175, 1)',\n            'rgba(4, 82, 160, 1)',\n            'rgba(14, 58, 102, 1)',\n            'rgba(128, 172, 216, 1)',\n            'rgba(72, 72, 72, 1)',\n            'rgba(72, 72, 72, 1)',\n            'rgba(72, 72, 72, 1)'\n          ],\n          borderWidth: 1\n        }]\n      };\n      //  console.log($scope.medianRentData);\n    }\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            stepSize: 50\n          },\n          stacked: false\n        }],\n        xAxes: [{\n          stacked: false\n        }]\n      }\n    };\n    //end of controller\n  });","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the doughnut chart directive =================================\nAA.directive('doughnutDirective', function() {\n  return {\n    restrict: 'E',\n    templateUrl: \"./../views/doughnut.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      let ctxDir = elem[0].children[0].children[0];\n\n      let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(\n          chartElement,\n          {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display:false,\n                lables: {\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              }\n            }\n          }\n        );\n      }\n\n      scope.$watch('type', function(newValue, oldValue, scope){\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n\n    }\n  }\n});\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: '='\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        // console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n          });\n        }\n\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\nthis.getData = (obj) => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    // console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item;\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"/api/onBoard\";\n\n  this.getData = () => {\n    return $http({\n      method: \"POST\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.response.result.package.item;\n    })\n  }\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"/api/pollution\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    return response.data.data[0];\n\n  })\n}\n//end of service\n});\n\n\n/* \nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"zipConversionService\", function ($http, $rootScope) {\n\n  const baseUrl = \"/api/zipConversion\";\n\n\n  this.getData = (obj) => {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then((response) => {\n      this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    }); \n  };\n   \n  this.findData = () => {\n    $rootScope.$broadcast('eventFired', {\n      data: this.data\n    });\n  };\n  //end of service\n});"]}