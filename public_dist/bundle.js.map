<<<<<<< HEAD
{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/doughnutDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js"],"names":["AA","angular","module","controller","$scope","$interval","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","city","zipcode","tempPlace","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","initAutocomplete","google","maps","places","Autocomplete","document","getElementById","types","addListener","fillInAddress","place","getPlace","component","value","disabled","console","log","address_components","long_name","i","length","addressType","val","inputValidation","geolocate","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","index","undefined","alert","info","crimeService","getInfo","getData","then","response","homeValueService","hospitalService","pollutionService","rentService","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","STUDIOINDEX","ONE_BEDINDEX","TWO_BEDINDEX","THREE_BEDINDEX","respone","FOUR_BEDINDEX","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","options","legend","display","scales","yAxes","ticks","beginAtZero","$watch","newValue","oldValue","responsive","maintainAspectRatio","title","text","service","$http","baseUrl","method","url","results"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval) {\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n    /** @type {!HTMLInputElement} */\n    document.getElementById('autocomplete'), {\n      types: ['geocode']\n    });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    for (var component in componentForm) {\n      document.getElementById(component).value = '';\n      document.getElementById(component).disabled = false;\n    }\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      if (componentForm[addressType]) {\n        var val = place.address_components[i][componentForm[addressType]];\n        document.getElementById(addressType).value = val;\n      }\n    }\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  var inputValidation = function inputValidation() {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Plase try again.');\n      }\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n  };\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.onBoardDataStudio;\n  $scope.onBoardDataOne;\n  $scope.onBoardDataTwo;\n  $scope.onBoardDataThree;\n  $scope.onBoardDataFour;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.onBoardDataStudio = response.STUDIOINDEX;\n      $scope.onBoardDataOne = response.ONE_BEDINDEX;\n      $scope.onBoardDataTwo = response.TWO_BEDINDEX;\n      $scope.onBoardDataThree = response.THREE_BEDINDEX;\n      $scope.onBoardDataFour = respone.FOUR_BEDINDEX;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('doughnutDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/doughnut.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            title: {\n\n              display: false,\n              text: 'Predicted world population (millions) in 2050'\n\n            }\n            // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n            // }   ] }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/species\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval) {\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n      /** @type {!HTMLInputElement} */\n      (document.getElementById('autocomplete')), {\n        types: ['geocode']\n      });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    for (var component in componentForm) {\n      document.getElementById(component).value = '';\n      document.getElementById(component).disabled = false;\n    }\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      if (componentForm[addressType]) {\n        var val = place.address_components[i][componentForm[addressType]];\n        document.getElementById(addressType).value = val;\n      }\n    }\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  const inputValidation = () => {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Plase try again.');\n      }\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n  };\n\n\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n\n  // // Google Scripts=====================================\n\n\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA.controller(\"crimeCtrl\", function($scope, crimeService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  crimeService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo(); \n\n\n\n//end of controller\n});\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA.controller(\"rentCtrl\", function($scope, rentService){\n\n$scope.onBoardDataStudio;\n$scope.onBoardDataOne;\n$scope.onBoardDataTwo;\n$scope.onBoardDataThree;\n$scope.onBoardDataFour;\n\n\n$scope.getInfo = () => {\n  rentService.getData().then( (response) => {\n    console.log(response);\n      $scope.onBoardDataStudio = response.STUDIOINDEX;\n      $scope.onBoardDataOne = response.ONE_BEDINDEX;\n      $scope.onBoardDataTwo = response.TWO_BEDINDEX;\n      $scope.onBoardDataThree = response.THREE_BEDINDEX;\n      $scope.onBoardDataFour = respone.FOUR_BEDINDEX;\n  })\n}\n\n$scope.getInfo();\n\n//end of controller\n});\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('doughnutDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/doughnut.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n        function getChartGivenData(chartElement, dataForChart, type) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n        function getChartGivenData(chartElement, dataForChart, type) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              title: {\n\n                display: false,\n                text: 'Predicted world population (millions) in 2050'\n\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/species\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response);\n    return response;\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n"]}
=======
{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js"],"names":["AA","angular","module","controller","$scope","$interval","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","$applyAsync","console","log","city","zipcode","tempPlace","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","initAutocomplete","google","maps","places","Autocomplete","document","getElementById","types","addListener","fillInAddress","place","getPlace","component","value","disabled","address_components","long_name","i","length","addressType","val","inputValidation","geolocate","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","index","undefined","alert","info","crimeService","assault","burglary","larceny","murder","motorVehicleTheft","personalCrime","property","rape","robbery","getInfo","getData","then","response","crmcyasst","crmcyburg","crmcylarc","crmcymurd","crmcymveh","crmcyperc","crmcyproc","crmcyrape","crmcyrobb","assignData","crimeData","doughnutOptions","responsive","maintainAspectRatio","legend","display","title","text","homeValueService","hospitalService","pollutionService","rentService","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","studio_county","one_bed_county","two_bed_county","three_bed_county","four_bed_county","medianRentData","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","options","chartElement","dataForChart","Chart","beginAtZero","$watch","newValue","oldValue","service","$http","baseUrl","method","url","result","package","item","results"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\nAA.controller(\"mainCtrl\", function ($scope, $interval) {\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  $interval(function () {\n    $scope.$applyAsync(function () {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n    /** @type {!HTMLInputElement} */\n    document.getElementById('autocomplete'), {\n      types: ['geocode']\n    });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    for (var component in componentForm) {\n      document.getElementById(component).value = '';\n      document.getElementById(component).disabled = false;\n    }\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      if (componentForm[addressType]) {\n        var val = place.address_components[i][componentForm[addressType]];\n        document.getElementById(addressType).value = val;\n      }\n    }\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  var inputValidation = function inputValidation() {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Plase try again.');\n      }\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n  };\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n  $scope.assault;\n  $scope.burglary;\n  $scope.larceny;\n  $scope.murder;\n  $scope.motorVehicleTheft;\n  $scope.personalCrime;\n  $scope.property;\n  $scope.rape;\n  $scope.robbery;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.assault = response.crmcyasst;\n      $scope.burglary = response.crmcyburg;\n      $scope.larceny = response.crmcylarc;\n      $scope.murder = response.crmcymurd;\n      $scope.motorVehicleTheft = response.crmcymveh;\n      $scope.personalCrime = response.crmcyperc;\n      $scope.property = response.crmcyproc;\n      $scope.rape = response.crmcyrape;\n      $scope.robbery = response.crmcyrobb;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.crimeData = {\n      labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n      datasets: [{\n        backgroundColor: [\"#2ecc71\", \"#3498db\", \"#95a5a6\", \"#9b59b6\", \"#f1c40f\", \"#e74c3c\", \"#34495e\"],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n        // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n      }]\n    };\n    console.log($scope.crimeData);\n    console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n  };\n\n  $scope.doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    title: {\n      display: true,\n      text: 'Crime Rates'\n    }\n    // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n    // }   ] }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.onBoardDataStudio;\n  $scope.onBoardDataOne;\n  $scope.onBoardDataTwo;\n  $scope.onBoardDataThree;\n  $scope.onBoardDataFour;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.onBoardDataStudio = response.studio_county;\n      $scope.onBoardDataOne = response.one_bed_county;\n      $scope.onBoardDataTwo = response.two_bed_county;\n      $scope.onBoardDataThree = response.three_bed_county;\n      $scope.onBoardDataFour = response.four_bed_county;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['S', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'apartments',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n        // 5, 10, -3, 7, -6\n        ],\n        backgroundColor: \"rgba(153,255,51,0.4)\"\n      }]\n    };\n    console.log($scope.medianRentData);\n  };\n\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          // beginAtZero: true,\n          stepSize: 50\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            title: {\n\n              display: false,\n              text: 'Predicted world population (millions) in 2050'\n\n            }\n            // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n            // }   ] }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\nAA.controller(\"mainCtrl\", function($scope, $interval){\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n\n  $interval(() => {\n    $scope.$applyAsync(() => {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n      /** @type {!HTMLInputElement} */\n      (document.getElementById('autocomplete')), {\n        types: ['geocode']\n      });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    for (var component in componentForm) {\n      document.getElementById(component).value = '';\n      document.getElementById(component).disabled = false;\n    }\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      if (componentForm[addressType]) {\n        var val = place.address_components[i][componentForm[addressType]];\n        document.getElementById(addressType).value = val;\n      }\n    }\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  const inputValidation = () => {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Plase try again.');\n      }\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n  };\n\n\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n\n  // // Google Scripts=====================================\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA\n  .controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n    $scope.assault;\n    $scope.burglary;\n    $scope.larceny;\n    $scope.murder;\n    $scope.motorVehicleTheft;\n    $scope.personalCrime;\n    $scope.property;\n    $scope.rape;\n    $scope.robbery;\n\n    $scope.getInfo = () => {\n      crimeService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.assault = response.crmcyasst;\n          $scope.burglary = response.crmcyburg;\n          $scope.larceny = response.crmcylarc;\n          $scope.murder = response.crmcymurd;\n          $scope.motorVehicleTheft = response.crmcymveh;\n          $scope.personalCrime = response.crmcyperc;\n          $scope.property = response.crmcyproc;\n          $scope.rape = response.crmcyrape;\n          $scope.robbery = response.crmcyrobb;\n          $scope.assignData();\n\n        })\n    }\n\n    $scope.getInfo();\n\n    $scope.assignData = function() {\n       $scope.crimeData = {\n    labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n    datasets: [{\n      backgroundColor: [\n        \"#2ecc71\",\n        \"#3498db\",\n        \"#95a5a6\",\n        \"#9b59b6\",\n        \"#f1c40f\",\n        \"#e74c3c\",\n        \"#34495e\"\n      ],\n      data: \n      [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n    }]\n  };\n         console.log($scope.crimeData);\n         console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n    };\n\n    $scope.doughnutOptions = {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n                  display: false\n                }\n              },\n              title: {\n                display: true,\n                text: 'Crime Rates'\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA\n  .controller(\"rentCtrl\", function ($scope, rentService) {\n\n    $scope.onBoardDataStudio;\n    $scope.onBoardDataOne;\n    $scope.onBoardDataTwo;\n    $scope.onBoardDataThree;\n    $scope.onBoardDataFour;\n\n\n    $scope.getInfo = () => {\n      rentService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.onBoardDataStudio = response.studio_county;\n          $scope.onBoardDataOne = response.one_bed_county;\n          $scope.onBoardDataTwo = response.two_bed_county;\n          $scope.onBoardDataThree = response.three_bed_county;\n          $scope.onBoardDataFour = response.four_bed_county;\n          $scope.assignData();\n        })\n    };\n\n    $scope.getInfo();\n\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'S', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'apartments',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n              // 5, 10, -3, 7, -6\n            ],\n            backgroundColor: \"rgba(153,255,51,0.4)\"\n          }\n        ]\n      };\n         console.log($scope.medianRentData);\n    }\n\n \n\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // beginAtZero: true,\n              stepSize: 50\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options:\n            {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              title: {\n\n                display: false,\n                text: 'Predicted world population (millions) in 2050'\n\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response);\n    return response.data.response.result.package.item;\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n"]}
>>>>>>> e8d3ec8e73265f267185ff9b2774f2e50a984752
