{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","controller","$scope","$interval","zipConversionService","clearData","city","zipcode","state","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","tempPlace","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","initAutocomplete","google","maps","places","Autocomplete","document","getElementById","types","addListener","fillInAddress","place","getPlace","component","value","disabled","console","log","address_components","long_name","i","length","addressType","val","inputValidation","geolocate","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","index","short_name","undefined","alert","getData","info","crimeService","assault","burglary","larceny","murder","motorVehicleTheft","personalCrime","property","rape","robbery","getInfo","then","response","crmcyasst","crmcyburg","crmcylarc","crmcymurd","crmcymveh","crmcyperc","crmcyproc","crmcyrape","crmcyrobb","assignData","crimeData","doughnutOptions","responsive","maintainAspectRatio","legend","display","title","text","homeValueService","hospitalService","pollutionService","rentService","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","studio_county","one_bed_county","two_bed_county","three_bed_county","four_bed_county","medianRentData","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","options","chartElement","dataForChart","Chart","beginAtZero","$watch","newValue","oldValue","service","$http","baseUrl","obj","method","url","result","package","item","results"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n'use strict';\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n  };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n    /** @type {!HTMLInputElement} */\n    document.getElementById('autocomplete'), {\n      types: ['geocode']\n    });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    for (var component in componentForm) {\n      document.getElementById(component).value = '';\n      document.getElementById(component).disabled = false;\n    }\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      if (componentForm[addressType]) {\n        var val = place.address_components[i][componentForm[addressType]];\n        document.getElementById(addressType).value = val;\n      }\n    }\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  var inputValidation = function inputValidation() {\n    console.log('Bob');\n\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if (!$scope.zipcode && $scope.city && $scope.state) {\n      zipConversionService.getData({ city: $scope.city, state: $scope.state });\n      console.log(\"calling zipConversionService\");\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n  };\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n  $scope.assault;\n  $scope.burglary;\n  $scope.larceny;\n  $scope.murder;\n  $scope.motorVehicleTheft;\n  $scope.personalCrime;\n  $scope.property;\n  $scope.rape;\n  $scope.robbery;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.assault = response.crmcyasst;\n      $scope.burglary = response.crmcyburg;\n      $scope.larceny = response.crmcylarc;\n      $scope.murder = response.crmcymurd;\n      $scope.motorVehicleTheft = response.crmcymveh;\n      $scope.personalCrime = response.crmcyperc;\n      $scope.property = response.crmcyproc;\n      $scope.rape = response.crmcyrape;\n      $scope.robbery = response.crmcyrobb;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.crimeData = {\n      labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n      datasets: [{\n        backgroundColor: [\"#2ecc71\", \"#3498db\", \"#95a5a6\", \"#9b59b6\", \"#f1c40f\", \"#e74c3c\", \"#34495e\"],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n        // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n      }]\n    };\n    console.log($scope.crimeData);\n    console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n  };\n\n  $scope.doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    title: {\n      display: true,\n      text: 'Crime Rates'\n    }\n    // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n    // }   ] }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.onBoardDataStudio;\n  $scope.onBoardDataOne;\n  $scope.onBoardDataTwo;\n  $scope.onBoardDataThree;\n  $scope.onBoardDataFour;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.onBoardDataStudio = response.studio_county;\n      $scope.onBoardDataOne = response.one_bed_county;\n      $scope.onBoardDataTwo = response.two_bed_county;\n      $scope.onBoardDataThree = response.three_bed_county;\n      $scope.onBoardDataFour = response.four_bed_county;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['S', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'apartments',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n        // 5, 10, -3, 7, -6\n        ],\n        backgroundColor: \"rgba(153,255,51,0.4)\"\n      }]\n    };\n    console.log($scope.medianRentData);\n  };\n\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          // beginAtZero: true,\n          stepSize: 50\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            title: {\n\n              display: false,\n              text: 'Predicted world population (millions) in 2050'\n\n            }\n            // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n            // }   ] }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n\n      return response.data.response.result.package.item;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http) {\n\n  var baseUrl = \"/api/zipConversion\";\n\n  this.getData = function (obj) {\n    console.log(obj);\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      console.log(response.data);\n      return response.data;\n    });\n  };\n\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function() {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n  }\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  \n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n      /** @type {!HTMLInputElement} */\n      (document.getElementById('autocomplete')), {\n        types: ['geocode']\n      });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    for (var component in componentForm) {\n      document.getElementById(component).value = '';\n      document.getElementById(component).disabled = false;\n    }\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n\n    // Get each component of the address from the place details\n    // and fill the corresponding field on the form.\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      if (componentForm[addressType]) {\n        var val = place.address_components[i][componentForm[addressType]];\n        document.getElementById(addressType).value = val;\n      }\n    }\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  const inputValidation = () => {\n    console.log('Bob');\n\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if (!$scope.zipcode && $scope.city && $scope.state) {\n      zipConversionService.getData({city: $scope.city, state: $scope.state});\n      console.log(\"calling zipConversionService\")\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n\n  };\n\n\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n\n  // // Google Scripts=====================================\n\n\n\n// $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA\n  .controller(\"crimeCtrl\", function ($scope, crimeService) {\n    $scope.assault;\n    $scope.burglary;\n    $scope.larceny;\n    $scope.murder;\n    $scope.motorVehicleTheft;\n    $scope.personalCrime;\n    $scope.property;\n    $scope.rape;\n    $scope.robbery;\n\n    $scope.getInfo = () => {\n      crimeService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.assault = response.crmcyasst;\n          $scope.burglary = response.crmcyburg;\n          $scope.larceny = response.crmcylarc;\n          $scope.murder = response.crmcymurd;\n          $scope.motorVehicleTheft = response.crmcymveh;\n          $scope.personalCrime = response.crmcyperc;\n          $scope.property = response.crmcyproc;\n          $scope.rape = response.crmcyrape;\n          $scope.robbery = response.crmcyrobb;\n          $scope.assignData();\n\n        })\n    }\n\n    $scope.getInfo();\n\n    $scope.assignData = function() {\n       $scope.crimeData = {\n    labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n    datasets: [{\n      backgroundColor: [\n        \"#2ecc71\",\n        \"#3498db\",\n        \"#95a5a6\",\n        \"#9b59b6\",\n        \"#f1c40f\",\n        \"#e74c3c\",\n        \"#34495e\"\n      ],\n      data:\n      [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n    }]\n  };\n         console.log($scope.crimeData);\n         console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n    };\n\n    $scope.doughnutOptions = {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n                  display: false\n                }\n              },\n              title: {\n                display: true,\n                text: 'Crime Rates'\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA\n  .controller(\"rentCtrl\", function ($scope, rentService) {\n\n    $scope.onBoardDataStudio;\n    $scope.onBoardDataOne;\n    $scope.onBoardDataTwo;\n    $scope.onBoardDataThree;\n    $scope.onBoardDataFour;\n\n\n    $scope.getInfo = () => {\n      rentService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.onBoardDataStudio = response.studio_county;\n          $scope.onBoardDataOne = response.one_bed_county;\n          $scope.onBoardDataTwo = response.two_bed_county;\n          $scope.onBoardDataThree = response.three_bed_county;\n          $scope.onBoardDataFour = response.four_bed_county;\n          $scope.assignData();\n        })\n    };\n\n    $scope.getInfo();\n\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'S', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'apartments',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n              // 5, 10, -3, 7, -6\n            ],\n            backgroundColor: \"rgba(153,255,51,0.4)\"\n          }\n        ]\n      };\n         console.log($scope.medianRentData);\n    }\n\n \n\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // beginAtZero: true,\n              stepSize: 50\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options:\n            {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              title: {\n\n                display: false,\n                text: 'Predicted world population (millions) in 2050'\n\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = (obj) => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n\n    return response.data.response.result.package.item;\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"zipConversionService\", function($http){\n\nconst baseUrl = \"/api/zipConversion\";\n\n\nthis.getData = (obj) => {\n  console.log(obj);\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    console.log(response.data);\n    return response.data;\n  })\n}\n\n//end of service\n});\n"]}