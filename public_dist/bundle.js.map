{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/chartDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","controller","$scope","$interval","zipConversionService","clearData","city","zipcode","state","console","log","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","tempPlace","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","initAutocomplete","google","maps","places","Autocomplete","document","getElementById","types","addListener","fillInAddress","place","getPlace","address_components","long_name","inputValidation","geolocate","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","index","length","short_name","undefined","alert","getData","then","foundData","findData","$on","event","assault","crmcyasst","burglary","crmcyburg","larceny","crmcylarc","murder","crmcymurd","motorVehicleTheft","crmcymveh","personalCrime","crmcyperc","property","crmcyproc","rape","crmcyrape","robbery","crmcyrobb","assignData","crimeData","crimeOptions","responsive","maintainAspectRatio","legend","display","avgsaleprice","propertySalePrice","hospitalService","getInfo","response","pollutionService","airPollutionIndex","aqi","$timeout","rentService","onBoardDataStudio","studio_county","onBoardDataOne","one_bed_county","onBoardDataTwo","two_bed_county","onBoardDataThree","three_bed_county","onBoardDataFour","four_bed_county","medianRentData","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService","directive","restrict","templateUrl","scope","chartData","type","options","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","$watch","newValue","oldValue","service","$http","baseUrl","method","url","results","result","package","item","$rootScope","obj","$broadcast"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n'use strict';\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n    console.log(\"it works!\");\n  };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  // START: THIS NEEDS RIPPING OUT !! -- !! ------------------------------------\n\n  // END: THIS NEEDS RIPPING OUT !! -- !! --------------------------------------\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n    /** @type {!HTMLInputElement} */\n    document.getElementById('autocomplete'), {\n      types: ['geocode']\n    });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  var inputValidation = function inputValidation() {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.getData({ city: $scope.city, state: $scope.state }).then(function (response) {\n        $scope.foundData = zipConversionService.findData();\n      });\n    }\n  };\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.assault = data.crmcyasst;\n    $scope.burglary = data.crmcyburg;\n    $scope.larceny = data.crmcylarc;\n    $scope.murder = data.crmcymurd;\n    $scope.motorVehicleTheft = data.crmcymveh;\n    $scope.personalCrime = data.crmcyperc;\n    $scope.property = data.crmcyproc;\n    $scope.rape = data.crmcyrape;\n    $scope.robbery = data.crmcyrobb;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n\n    $scope.crimeData = {\n      labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"robbery\"],\n      datasets: [{\n        backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      }]\n    };\n  };\n\n  $scope.crimeOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    }\n  };\n  // end of controller\n});\n'use strict';\n\nAA.controller(\"homeValueCtrl\", function ($scope, zipConversionService) {\n  console.log('see me');\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.avgsaleprice = data.avgsaleprice;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.airPollutionIndex;\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      $scope.airPollutionIndex = response.aqi;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($timeout, $scope, rentService, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.onBoardDataStudio = data.studio_county;\n    $scope.onBoardDataOne = data.one_bed_county;\n    $scope.onBoardDataTwo = data.two_bed_county;\n    $scope.onBoardDataThree = data.three_bed_county;\n    $scope.onBoardDataFour = data.four_bed_county;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['Stu', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'Rent P/M $',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour],\n        backgroundColor: ['rgba(33, 125, 216, 0.5)', 'rgba(165, 171, 175, 0.5)', 'rgba(4, 82, 160, 0.5)', 'rgba(14, 58, 102, 0.5)', 'rgba(128, 172, 216, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)'],\n        borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n        borderWidth: 1\n      }]\n    };\n    //  console.log($scope.medianRentData);\n  };\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          stepSize: 250\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('chartDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/chartDirective.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n          // {\n          //   legend: {\n          //     display: false,\n          //     labels: {\n          //\n          //       display: false\n          //     }\n          //   },\n          //   scales: {\n          //     yAxes: [\n          //       {\n          //         ticks: {\n          //           beginAtZero: true\n          //         }\n          //       }\n          //     ]\n          //   }\n          // }\n        });\n      }\n\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: '='\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      // console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n        });\n      }\n\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  // const baseUrl = \"/api/onBoard\";\n  //\n  // this.getData = () => {\n  //   return $http({\n  //     method: \"POST\",\n  //     url: baseUrl\n  //   }).then( (response) => {\n  //     console.log('hvservice', response);\n  //     return response.data.response.result.package.item;\n  //   })\n  // }\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"/api/pollution\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      return response.data.data[0];\n    });\n  };\n  //end of service\n});\n\n/* \nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"POST\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http, $rootScope) {\n  var _this = this;\n\n  var baseUrl = \"/api/zipConversion\";\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      _this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    });\n  };\n  this.findData = function () {\n    $rootScope.$broadcast('eventFired', _this.data);\n  };\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function() {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n    console.log(\"it works!\");\n  }\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n  // START: THIS NEEDS RIPPING OUT !! -- !! ------------------------------------\n\n  // END: THIS NEEDS RIPPING OUT !! -- !! --------------------------------------\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  // This example displays an address form, using the autocomplete feature\n  // of the Google Places API to help users fill in the information.\n\n  // This example requires the Places library. Include the libraries=places\n  // parameter when you first load the API. For example:\n  // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  var placeSearch, autocomplete;\n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name'\n  };\n\n  function initAutocomplete() {\n\n    //Clearing out previous variable.\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n\n\n    // Create the autocomplete object, restricting the search to geographical\n    // location types.\n    autocomplete = new google.maps.places.Autocomplete(\n      /** @type {!HTMLInputElement} */\n      (document.getElementById('autocomplete')), {\n        types: ['geocode']\n      });\n\n    // When the user selects an address from the dropdown, populate the address\n    // fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    var place = autocomplete.getPlace();\n\n    console.log('showing google object: ', place);\n    $scope.tempPlace = place;\n    console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n    //Initiatin Input validation.\n    inputValidation();\n  }\n\n  // Bias the autocomplete object to the user's geographical location,\n  // as supplied by the browser's 'navigator.geolocation' object.\n  function geolocate() {\n\n    console.log('Functiong initiated');\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n\n  const inputValidation = () => {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n        $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.getData({city: $scope.city, state: $scope.state}).then(response => {\n        $scope.foundData = zipConversionService.findData();\n      });\n    }\n  };\n\n\n  //Initiating Pre Render\n  geolocate();\n  initAutocomplete();\n\n  // // Google Scripts=====================================\n\n\n\n// $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA.controller(\"crimeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.assault = data.crmcyasst;\n    $scope.burglary = data.crmcyburg;\n    $scope.larceny = data.crmcylarc;\n    $scope.murder = data.crmcymurd;\n    $scope.motorVehicleTheft = data.crmcymveh;\n    $scope.personalCrime = data.crmcyperc;\n    $scope.property = data.crmcyproc;\n    $scope.rape = data.crmcyrape;\n    $scope.robbery = data.crmcyrobb;\n    $scope.assignData();\n  });\n\n    $scope.assignData = function() {\n\n      $scope.crimeData = {\n        labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"robbery\"],\n        datasets: [{\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.8)',\n            'rgba(165, 171, 175, 0.8)',\n            'rgba(4, 82, 160, 0.8)',\n            'rgba(14, 58, 102, 0.8)',\n            'rgba(128, 172, 216, 0.8)',\n            'rgba(72, 72, 72, 0.8)',\n            'rgba(72, 72, 72, 0.8)'\n          ],\n          data:\n          [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery],\n        }]\n      };\n    };\n\n    $scope.crimeOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      }\n    };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, zipConversionService){\n  console.log('see me');\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n      $scope.avgsaleprice = data.avgsaleprice;\n      $scope.assignData();\n  });\n\n\n  $scope.assignData = function() {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  }\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.airPollutionIndex;\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   $scope.airPollutionIndex = response.aqi;\n })\n}\n\n$scope.getInfo();\n});\n","AA.controller(\"rentCtrl\", function ($timeout, $scope, rentService, zipConversionService) {\n\n    $scope.$on('eventFired', function (event, data) {\n      console.log(data);\n        $scope.onBoardDataStudio = data.studio_county;\n        $scope.onBoardDataOne = data.one_bed_county;\n        $scope.onBoardDataTwo = data.two_bed_county;\n        $scope.onBoardDataThree = data.three_bed_county;\n        $scope.onBoardDataFour = data.four_bed_county;\n        $scope.assignData();\n    });\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'Stu', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'Rent P/M $',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n            ],\n            backgroundColor: [\n              'rgba(33, 125, 216, 0.5)',\n              'rgba(165, 171, 175, 0.5)',\n              'rgba(4, 82, 160, 0.5)',\n              'rgba(14, 58, 102, 0.5)',\n              'rgba(128, 172, 216, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)'\n            ],\n            borderColor: [\n              'rgba(33, 125, 216, 1)',\n              'rgba(165, 171, 175, 1)',\n              'rgba(4, 82, 160, 1)',\n              'rgba(14, 58, 102, 1)',\n              'rgba(128, 172, 216, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)'\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n      //  console.log($scope.medianRentData);\n    }\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              stepSize: 250\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('chartDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/chartDirective.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n            // {\n            //   legend: {\n            //     display: false,\n            //     labels: {\n            //\n            //       display: false\n            //     }\n            //   },\n            //   scales: {\n            //     yAxes: [\n            //       {\n            //         ticks: {\n            //           beginAtZero: true\n            //         }\n            //       }\n            //     ]\n            //   }\n            // }\n          });\n        }\n\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: '='\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        // console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n          });\n        }\n\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  // const baseUrl = \"/api/onBoard\";\n  //\n  // this.getData = () => {\n  //   return $http({\n  //     method: \"POST\",\n  //     url: baseUrl\n  //   }).then( (response) => {\n  //     console.log('hvservice', response);\n  //     return response.data.response.result.package.item;\n  //   })\n  // }\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"/api/pollution\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    return response.data.data[0];\n\n  })\n}\n//end of service\n});\n\n\n/* \nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"zipConversionService\", function($http, $rootScope){\n\nconst baseUrl = \"/api/zipConversion\";\n\n\nthis.getData = (obj) => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    this.data = response.data.response.result.package.item;\n    return response.data.response.result.package.item;\n  })\n}\nthis.findData = () => {\n  $rootScope.$broadcast('eventFired', this.data);\n}\n//end of service\n});\n"]}