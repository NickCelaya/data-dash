{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/incomeCtrl.js","controllers/languagesCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/chartDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","controller","$scope","$interval","zipConversionService","clearData","city","zipcode","state","console","log","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","tempPlace","initMap","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","input","options","componentRestrictions","country","autocomplete","places","Autocomplete","bindTo","infowindow","InfoWindow","marker","Marker","anchorPoint","Point","addListener","close","setVisible","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","setIcon","url","icon","size","Size","origin","anchor","scaledSize","setPosition","inputValidation","index","address_components","length","types","long_name","short_name","getData","then","foundData","findData","$on","event","assault","crmcyasst","burglary","crmcyburg","larceny","crmcylarc","murder","crmcymurd","motorVehicleTheft","crmcymveh","personalCrime","crmcyperc","property","crmcyproc","rape","crmcyrape","robbery","crmcyrobb","assignData","crimeData","crimeOptions","responsive","maintainAspectRatio","legend","display","avgsaleprice","propertySalePrice","hospitalService","splitCity","split","join","getInfo","response","income15_20","hincy15_20","income20_25","hincy20_25","income30_35","hincy30_35","income40_45","hincy40_45","income50_60","hincy50_60","income60_75","hincy60_75","income75_100","hincy75_100","incomeData","incomeOptions","$timeout","asian","langasian","english","langeng","european","langeuro","other","langother","spanish","langspan","langData","langOptions","scales","yAxes","ticks","stepSize","stacked","xAxes","pollutionService","airPollutionIndex","aqi","rentService","onBoardDataStudio","studio_county","onBoardDataOne","one_bed_county","onBoardDataTwo","two_bed_county","onBoardDataThree","three_bed_county","onBoardDataFour","four_bed_county","medianRentData","optionsObj","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","$watch","newValue","oldValue","beginAtZero","service","$http","baseUrl","method","$rootScope","obj","result","package","item","$broadcast"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n'use strict';\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n    console.log(\"it works!\");\n  };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  // START: THIS NEEDS RIPPING OUT !! -- !! ------------------------------------\n\n  // END: THIS NEEDS RIPPING OUT !! -- !! --------------------------------------\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.tempPlace;\n\n  //Use this if we only need zipcode from google\n  //$scope.zipcode;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    //This is restriction for the country code.\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      // // if (!place.geometry) {\n      // //   window.alert(\"Autocomplete's returned place contains no geometry\");\n      // //   return;\n      // // }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(25);\n      }\n      marker.setIcon({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      });\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      $scope.tempPlace = place;\n      inputValidation();\n    });\n  }\n\n  var inputValidation = function inputValidation() {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      //Only need this if we need zipcode from the Google.\n      // if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n      //   $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      // }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.city = $scope.city;\n\n      zipConversionService.getData({\n        city: $scope.city,\n        state: $scope.state\n      }).then(function (response) {\n        $scope.foundData = zipConversionService.findData();\n      });\n    }\n  };\n\n  //Initiating Pre Render\n  initMap();\n\n  // // Google Scripts=====================================\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.assault = data.crmcyasst;\n    $scope.burglary = data.crmcyburg;\n    $scope.larceny = data.crmcylarc;\n    $scope.murder = data.crmcymurd;\n    $scope.motorVehicleTheft = data.crmcymveh;\n    $scope.personalCrime = data.crmcyperc;\n    $scope.property = data.crmcyproc;\n    $scope.rape = data.crmcyrape;\n    $scope.robbery = data.crmcyrobb;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n\n    $scope.crimeData = {\n      labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"Robbery\"],\n      datasets: [{\n        backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      }]\n    };\n  };\n\n  $scope.crimeOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    }\n  };\n  // end of controller\n});\n'use strict';\n\nAA.controller(\"homeValueCtrl\", function ($scope, zipConversionService) {\n  console.log('see me');\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.avgsaleprice = data.avgsaleprice;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService, zipConversionService) {\n\n  $scope.city;\n\n  $scope.$on('eventFired', function (event, data) {\n    $scope.city = zipConversionService.city;\n\n    console.log(\"this is hospital controller\", $scope.city);\n\n    var city = $scope.city;\n\n    var splitCity = city.split(\" \").join(\"+\");\n    console.log(\"hey this is splitCity\", splitCity);\n    console.log('Show me data type for splitcity: ', typeof splitCity === \"undefined\" ? \"undefined\" : _typeof(splitCity));\n\n    $scope.getInfo(splitCity);\n  });\n\n  $scope.getInfo = function (city) {\n    hospitalService.getData(city).then(function (response) {\n      console.log('Here is the response from Health Service: ', response);\n      $scope.data = response;\n    });\n  };\n});\n\"use strict\";\n\nAA.controller(\"incomeCtrl\", function ($scope, zipConversionService) {\n\n  console.log(\"income controller\");\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.income15_20 = data.hincy15_20;\n    $scope.income20_25 = data.hincy20_25;\n    $scope.income30_35 = data.hincy30_35;\n    $scope.income40_45 = data.hincy40_45;\n    $scope.income50_60 = data.hincy50_60;\n    $scope.income60_75 = data.hincy60_75;\n    $scope.income75_100 = data.hincy75_100;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n\n    $scope.incomeData = {\n      labels: [\"$15-20K\", \"$20-25K\", \"$30-35K\", \"$40-45K\", \"$50-60K \", \"$60-75K\", \"$75-100k\"],\n      datasets: [{\n        backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n        data: [$scope.income15_20, $scope.income20_25, $scope.income30_35, $scope.income40_45, $scope.income50_60, $scope.income60_75, $scope.income75_100]\n      }]\n    };\n  };\n\n  $scope.incomeOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"languagesCtrl\", function ($timeout, $scope, zipConversionService) {\n\n  console.log(\"languages working\");\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.asian = data.langasian;\n    $scope.english = data.langeng;\n    $scope.european = data.langeuro;\n    $scope.other = data.langother;\n    $scope.spanish = data.langspan;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.langData = {\n      labels: ['Asian', 'English', 'european', 'Other', 'Spanish'],\n      datasets: [{\n        label: 'language',\n        data: [$scope.asian, $scope.english, $scope.european, $scope.other, $scope.spanish],\n        backgroundColor: ['rgba(33, 125, 216, 0.5)', 'rgba(165, 171, 175, 0.5)', 'rgba(4, 82, 160, 0.5)', 'rgba(14, 58, 102, 0.5)', 'rgba(128, 172, 216, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)'],\n        borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n        borderWidth: 1\n      }]\n    };\n    //  console.log($scope.medianRentData);\n  };\n  $scope.langOptions = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          stepSize: 5000\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.airPollutionIndex;\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      $scope.airPollutionIndex = response.aqi;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($timeout, $scope, rentService, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.onBoardDataStudio = data.studio_county;\n    $scope.onBoardDataOne = data.one_bed_county;\n    $scope.onBoardDataTwo = data.two_bed_county;\n    $scope.onBoardDataThree = data.three_bed_county;\n    $scope.onBoardDataFour = data.four_bed_county;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['Stu', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'Rent P/M $',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour],\n        backgroundColor: ['rgba(33, 125, 216, 0.5)', 'rgba(165, 171, 175, 0.5)', 'rgba(4, 82, 160, 0.5)', 'rgba(14, 58, 102, 0.5)', 'rgba(128, 172, 216, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)'],\n        borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n        borderWidth: 1\n      }]\n    };\n    //  console.log($scope.medianRentData);\n  };\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          stepSize: 500\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('chartDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/chartDirective.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n          // {\n          //   legend: {\n          //     display: false,\n          //     labels: {\n          //\n          //       display: false\n          //     }\n          //   },\n          //   scales: {\n          //     yAxes: [\n          //       {\n          //         ticks: {\n          //           beginAtZero: true\n          //         }\n          //       }\n          //     ]\n          //   }\n          // }\n        });\n      }\n\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: '='\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      // console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n        });\n      }\n\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  // const baseUrl = \"/api/onBoard\";\n  //\n  // this.getData = () => {\n  //   return $http({\n  //     method: \"POST\",\n  //     url: baseUrl\n  //   }).then( (response) => {\n  //     console.log('hvservice', response);\n  //     return response.data.response.result.package.item;\n  //   })\n  // }\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n  // \n  // const baseUrl = \"/api/hospitals\";\n  //\n  //\n  // this.getData = (city) => {\n  //   console.log('Showing city data before sending API call: ', city);\n  //   return $http({\n  //     method: \"POST\",\n  //     url: baseUrl,\n  //     data: {city}\n  //   }).then( (response) => {\n  //     console.log('Here is reponse back hospital service (Angular): ', response.data.PlaceSearchResponse.result.length);\n  //     return response.data.PlaceSearchResponse.result.length;\n  //\n  //   });\n  // };\n  //\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"/api/pollution\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      return response.data.data[0];\n    });\n  };\n  //end of service\n});\n\n/* \nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n  // \n  // const baseUrl = \"/api/onBoard\";\n  //\n  //\n  // this.getData = () => {\n  //   return $http({\n  //     method: \"POST\",\n  //     url: baseUrl\n  //   }).then( (response) => {\n  //     console.log(response.data.response.result.package.item);\n  //     return response.data.response.result.package.item\n  //\n  //   })\n  // }\n  //\n  //\n  //\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  // const baseUrl = \"http://swapi.co/api/starships\"\n  //\n  //\n  // this.getData = () => {\n  //   return $http({\n  //     method: \"GET\",\n  //     url: baseUrl\n  //   }).then( (response) => {\n  //     console.log(response.data.results);\n  //     return response.data.results;\n  //   })\n  // }\n  //\n  //\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http, $rootScope) {\n  var _this = this;\n\n  var baseUrl = \"/api/zipConversion\";\n\n  var city;\n  this.city = city;\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      _this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    });\n  };\n  this.findData = function () {\n    $rootScope.$broadcast('eventFired', _this.data);\n  };\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n    console.log(\"it works!\");\n  }\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n  // START: THIS NEEDS RIPPING OUT !! -- !! ------------------------------------\n\n  // END: THIS NEEDS RIPPING OUT !! -- !! --------------------------------------\n\n  //Google Scripts for Google Map. =====================================\n  // var map;\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById('map'), {\n  //     center: {\n  //       lat: -34.397,\n  //       lng: 150.644\n  //     },\n  //     zoom: 8\n  //   });\n  // }\n\n  // //Initializing the map.\n  // initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n  // Google Scripts for Auto Complete.=====================================\n  //variables\n  $scope.city;\n  $scope.tempPlace;\n\n  //Use this if we only need zipcode from google\n  //$scope.zipcode;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    //This is restriction for the country code.\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      // // if (!place.geometry) {\n      // //   window.alert(\"Autocomplete's returned place contains no geometry\");\n      // //   return;\n      // // }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(25);\n      }\n      marker.setIcon(({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      }));\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      $scope.tempPlace = place;\n      inputValidation();\n\n    });\n  }\n\n  const inputValidation = () => {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      //Only need this if we need zipcode from the Google.\n      // if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n      //   $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      // }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n    }\n\n    if ($scope.city && $scope.state) {\n        zipConversionService.city = $scope.city\n\n      zipConversionService.getData({\n        city: $scope.city,\n        state: $scope.state\n      }).then(response => {\n        $scope.foundData = zipConversionService.findData();\n      });\n    }\n  };\n\n\n  //Initiating Pre Render\n  initMap();\n\n  // // Google Scripts=====================================\n\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA.controller(\"crimeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.assault = data.crmcyasst;\n    $scope.burglary = data.crmcyburg;\n    $scope.larceny = data.crmcylarc;\n    $scope.murder = data.crmcymurd;\n    $scope.motorVehicleTheft = data.crmcymveh;\n    $scope.personalCrime = data.crmcyperc;\n    $scope.property = data.crmcyproc;\n    $scope.rape = data.crmcyrape;\n    $scope.robbery = data.crmcyrobb;\n    $scope.assignData();\n  });\n\n    $scope.assignData = function() {\n\n      $scope.crimeData = {\n        labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"Robbery\"],\n        datasets: [{\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.8)',\n            'rgba(165, 171, 175, 0.8)',\n            'rgba(4, 82, 160, 0.8)',\n            'rgba(14, 58, 102, 0.8)',\n            'rgba(128, 172, 216, 0.8)',\n            'rgba(72, 72, 72, 0.8)',\n            'rgba(72, 72, 72, 0.8)'\n          ],\n          data:\n          [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery],\n        }]\n      };\n    };\n\n    $scope.crimeOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      }\n    };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, zipConversionService){\n  console.log('see me');\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n      $scope.avgsaleprice = data.avgsaleprice;\n      $scope.assignData();\n  });\n\n\n  $scope.assignData = function() {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  }\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService, zipConversionService){\n\n  $scope.city;\n\n\n  $scope.$on('eventFired', function (event, data) {\n    $scope.city = zipConversionService.city\n\n    console.log(\"this is hospital controller\", $scope.city);\n\n    var city = $scope.city\n\n    var splitCity = city.split(\" \").join(\"+\");\n    console.log(\"hey this is splitCity\",splitCity);\n    console.log('Show me data type for splitcity: ', typeof(splitCity));\n\n    $scope.getInfo(splitCity);\n  });\n\n\n$scope.getInfo = (city) => {\n  hospitalService.getData(city).then( (response) => {\n    console.log('Here is the response from Health Service: ', response);\n    $scope.data = response;\n  });\n};\n\n\n\n});\n","AA.controller(\"incomeCtrl\", function ($scope, zipConversionService) {\n\n\nconsole.log(\"income controller\");\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.income15_20 = data.hincy15_20;\n    $scope.income20_25 = data.hincy20_25;\n    $scope.income30_35 = data.hincy30_35;\n    $scope.income40_45 = data.hincy40_45;\n    $scope.income50_60 = data.hincy50_60;\n    $scope.income60_75 = data.hincy60_75;\n    $scope.income75_100 = data.hincy75_100;\n    $scope.assignData();\n  });\n\n    $scope.assignData = function() {\n\n      $scope.incomeData = {\n        labels: [\"$15-20K\", \"$20-25K\", \"$30-35K\", \"$40-45K\", \"$50-60K \", \"$60-75K\", \"$75-100k\"],\n        datasets: [{\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.8)',\n            'rgba(165, 171, 175, 0.8)',\n            'rgba(4, 82, 160, 0.8)',\n            'rgba(14, 58, 102, 0.8)',\n            'rgba(128, 172, 216, 0.8)',\n            'rgba(72, 72, 72, 0.8)',\n            'rgba(72, 72, 72, 0.8)'\n          ],\n          data:\n          [$scope.income15_20, $scope.income20_25, $scope.income30_35, $scope.income40_45, $scope.income50_60, $scope.income60_75, $scope.income75_100],\n        }]\n      };\n    };\n\n    $scope.incomeOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      }\n    };\n    // end of controller\n  });\n","AA.controller(\"languagesCtrl\", function ($timeout, $scope, zipConversionService) {\n\nconsole.log(\"languages working\");\n    $scope.$on('eventFired', function (event, data) {\n      console.log(data);\n        $scope.asian = data.langasian;\n        $scope.english = data.langeng;\n        $scope.european = data.langeuro;\n        $scope.other = data.langother;\n        $scope.spanish = data.langspan;\n        $scope.assignData();\n    });\n\n    $scope.assignData = function () {\n      $scope.langData = {\n        labels: [\n          'Asian', 'English', 'european', 'Other', 'Spanish'\n        ],\n        datasets: [\n          {\n            label: 'language',\n            data: [\n              $scope.asian, $scope.english, $scope.european, $scope.other, $scope.spanish\n            ],\n            backgroundColor: [\n              'rgba(33, 125, 216, 0.5)',\n              'rgba(165, 171, 175, 0.5)',\n              'rgba(4, 82, 160, 0.5)',\n              'rgba(14, 58, 102, 0.5)',\n              'rgba(128, 172, 216, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)'\n            ],\n            borderColor: [\n              'rgba(33, 125, 216, 1)',\n              'rgba(165, 171, 175, 1)',\n              'rgba(4, 82, 160, 1)',\n              'rgba(14, 58, 102, 1)',\n              'rgba(128, 172, 216, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)'\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n      //  console.log($scope.medianRentData);\n    }\n    $scope.langOptions = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              stepSize: 5000\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n    //end of controller\n  });\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.airPollutionIndex;\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   $scope.airPollutionIndex = response.aqi;\n })\n}\n\n$scope.getInfo();\n});\n","AA.controller(\"rentCtrl\", function ($timeout, $scope, rentService, zipConversionService) {\n\n    $scope.$on('eventFired', function (event, data) {\n      console.log(data);\n        $scope.onBoardDataStudio = data.studio_county;\n        $scope.onBoardDataOne = data.one_bed_county;\n        $scope.onBoardDataTwo = data.two_bed_county;\n        $scope.onBoardDataThree = data.three_bed_county;\n        $scope.onBoardDataFour = data.four_bed_county;\n        $scope.assignData();\n    });\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'Stu', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'Rent P/M $',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n            ],\n            backgroundColor: [\n              'rgba(33, 125, 216, 0.5)',\n              'rgba(165, 171, 175, 0.5)',\n              'rgba(4, 82, 160, 0.5)',\n              'rgba(14, 58, 102, 0.5)',\n              'rgba(128, 172, 216, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)'\n            ],\n            borderColor: [\n              'rgba(33, 125, 216, 1)',\n              'rgba(165, 171, 175, 1)',\n              'rgba(4, 82, 160, 1)',\n              'rgba(14, 58, 102, 1)',\n              'rgba(128, 172, 216, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)'\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n      //  console.log($scope.medianRentData);\n    }\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              stepSize: 500\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('chartDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/chartDirective.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n            // {\n            //   legend: {\n            //     display: false,\n            //     labels: {\n            //\n            //       display: false\n            //     }\n            //   },\n            //   scales: {\n            //     yAxes: [\n            //       {\n            //         ticks: {\n            //           beginAtZero: true\n            //         }\n            //       }\n            //     ]\n            //   }\n            // }\n          });\n        }\n\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: '='\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        // console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n          });\n        }\n\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  // const baseUrl = \"/api/onBoard\";\n  //\n  // this.getData = () => {\n  //   return $http({\n  //     method: \"POST\",\n  //     url: baseUrl\n  //   }).then( (response) => {\n  //     console.log('hvservice', response);\n  //     return response.data.response.result.package.item;\n  //   })\n  // }\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n// \n// const baseUrl = \"/api/hospitals\";\n//\n//\n// this.getData = (city) => {\n//   console.log('Showing city data before sending API call: ', city);\n//   return $http({\n//     method: \"POST\",\n//     url: baseUrl,\n//     data: {city}\n//   }).then( (response) => {\n//     console.log('Here is reponse back hospital service (Angular): ', response.data.PlaceSearchResponse.result.length);\n//     return response.data.PlaceSearchResponse.result.length;\n//\n//   });\n// };\n//\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"/api/pollution\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    return response.data.data[0];\n\n  })\n}\n//end of service\n});\n\n\n/* \nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n","AA.service(\"rentService\", function($http){\n// \n// const baseUrl = \"/api/onBoard\";\n//\n//\n// this.getData = () => {\n//   return $http({\n//     method: \"POST\",\n//     url: baseUrl\n//   }).then( (response) => {\n//     console.log(response.data.response.result.package.item);\n//     return response.data.response.result.package.item\n//\n//   })\n// }\n//\n//\n//\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\n// const baseUrl = \"http://swapi.co/api/starships\"\n//\n//\n// this.getData = () => {\n//   return $http({\n//     method: \"GET\",\n//     url: baseUrl\n//   }).then( (response) => {\n//     console.log(response.data.results);\n//     return response.data.results;\n//   })\n// }\n//\n//\n\n//end of service\n});\n","AA.service(\"zipConversionService\", function($http, $rootScope){\n\n  const baseUrl = \"/api/zipConversion\";\n\n  var city;\n  this.city = city;\n\n  this.getData = (obj) => {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then( (response) => {\n      this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    })\n  }\n  this.findData = () => {\n    $rootScope.$broadcast('eventFired', this.data);\n  }\n//end of service\n});\n"]}