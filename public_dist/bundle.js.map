{"version":3,"sources":["bundle.js","app.js","distFilter.js","mainCrtl.js","controllers/airportCtrl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/incomeCtrl.js","controllers/languagesCtrl.js","controllers/pollutionCtrl.js","controllers/populationCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/chartDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","filter","input","undefined","controller","$scope","$interval","zipConversionService","clearData","city","zipcode","state","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","tempPlace","initMap","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","options","componentRestrictions","country","autocomplete","places","Autocomplete","bindTo","infowindow","InfoWindow","marker","Marker","anchorPoint","Point","addListener","close","setVisible","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","setIcon","url","icon","size","Size","origin","anchor","scaledSize","setPosition","inputValidation","index","address_components","length","types","long_name","short_name","getData","then","findData","$on","event","data","console","log","airport","airportDist","airportdist","assignData","assault","crmcyasst","burglary","crmcyburg","larceny","crmcylarc","murder","crmcymurd","motorVehicleTheft","crmcymveh","personalCrime","crmcyperc","property","crmcyproc","rape","crmcyrape","robbery","crmcyrobb","crimeData","labels","datasets","backgroundColor","crimeOptions","responsive","maintainAspectRatio","legend","display","avgsaleprice","propertySalePrice","hospitalService","splitCity","split","join","getInfo","response","income15_20","hincy15_20","income20_25","hincy20_25","income30_35","hincy30_35","income40_45","hincy40_45","income50_60","hincy50_60","income60_75","hincy60_75","income75_100","hincy75_100","incomeData","incomeOptions","$timeout","asian","langasian","english","langeng","spanish","langspan","european","langeuro","other","langother","langData","label","borderColor","borderWidth","langOptions","scales","yAxes","ticks","stepSize","stacked","xAxes","pollutionService","airPollutionIndex","aqi","popcy","populationNum","rentService","onBoardDataStudio","studio_county","onBoardDataOne","one_bed_county","onBoardDataTwo","two_bed_county","onBoardDataThree","three_bed_county","onBoardDataFour","four_bed_county","medianRentData","optionsObj","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","ctxDir","children","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","$watch","newValue","oldValue","beginAtZero","service","$http","baseUrl","method","$rootScope","obj","result","package","item","$broadcast"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n'use strict';\n\nAA.filter('distance', function () {\n\n  return function (input) {\n    if (input != undefined) {\n      return input + ' Miles';\n    }\n  };\n});\n'use strict';\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  // Google Scripts for Google Map. ============================================\n\n  // Google Scripts for Auto Complete.==========================================\n  //variables\n  $scope.city;\n  $scope.tempPlace;\n\n  //Use this if we only need zipcode from google -------------------------------\n  //$scope.zipcode;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    //This is restriction for the country code.\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(35);\n      }\n      marker.setIcon({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      });\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      $scope.tempPlace = place;\n      inputValidation();\n    });\n  }\n\n  var inputValidation = function inputValidation() {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.city = $scope.city;\n      zipConversionService.getData({\n        city: $scope.city,\n        state: $scope.state\n      }).then(function (response) {\n        zipConversionService.findData();\n      });\n    }\n  };\n\n  initMap();\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"airportCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.airport = data.airport; // AIRPORT\n    $scope.airportDist = data.airportdist; // AIRPORTDIST\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.airport = data.airport;\n    $scope.airportDist = data.airportdist;\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.assault = data.crmcyasst;\n    $scope.burglary = data.crmcyburg;\n    $scope.larceny = data.crmcylarc;\n    $scope.murder = data.crmcymurd;\n    $scope.motorVehicleTheft = data.crmcymveh;\n    $scope.personalCrime = data.crmcyperc;\n    $scope.property = data.crmcyproc;\n    $scope.rape = data.crmcyrape;\n    $scope.robbery = data.crmcyrobb;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n\n    $scope.crimeData = {\n      labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"Robbery\"],\n      datasets: [{\n        backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      }]\n    };\n  };\n\n  $scope.crimeOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    // console.log(data);\n    $scope.avgsaleprice = data.avgsaleprice;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService, zipConversionService) {\n\n  $scope.city;\n\n  $scope.$on('eventFired', function (event, data) {\n    $scope.city = zipConversionService.city;\n\n    var city = $scope.city;\n    var splitCity = city.split(\" \").join(\"+\");\n\n    $scope.getInfo(splitCity);\n  });\n\n  $scope.getInfo = function (city) {\n    hospitalService.getData(city).then(function (response) {\n      $scope.data = response;\n    });\n  };\n});\n\"use strict\";\n\nAA.controller(\"incomeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.income15_20 = data.hincy15_20;\n    $scope.income20_25 = data.hincy20_25;\n    $scope.income30_35 = data.hincy30_35;\n    $scope.income40_45 = data.hincy40_45;\n    $scope.income50_60 = data.hincy50_60;\n    $scope.income60_75 = data.hincy60_75;\n    $scope.income75_100 = data.hincy75_100;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n\n    $scope.incomeData = {\n      labels: [\"$15-20K\", \"$20-25K\", \"$30-35K\", \"$40-45K\", \"$50-60K \", \"$60-75K\", \"$75-100k\"],\n      datasets: [{\n        backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n        data: [$scope.income15_20, $scope.income20_25, $scope.income30_35, $scope.income40_45, $scope.income50_60, $scope.income60_75, $scope.income75_100]\n      }]\n    };\n  };\n\n  $scope.incomeOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    }\n  };\n  // end of controller\n});\n'use strict';\n\nAA.controller(\"languagesCtrl\", function ($timeout, $scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    $scope.asian = data.langasian;\n    $scope.english = data.langeng;\n    $scope.spanish = data.langspan;\n    $scope.european = data.langeuro;\n    $scope.other = data.langother;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.langData = {\n      labels: ['Asian', 'English', 'Spanish', 'European', 'Other'],\n      datasets: [{\n        label: 'Language',\n        data: [$scope.asian, $scope.english, $scope.spanish, $scope.european, $scope.other],\n        backgroundColor: ['rgba(33, 125, 216, 0.5)', 'rgba(165, 171, 175, 0.5)', 'rgba(4, 82, 160, 0.5)', 'rgba(14, 58, 102, 0.5)', 'rgba(128, 172, 216, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)'],\n        borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n        borderWidth: 1\n      }]\n    };\n  };\n  $scope.langOptions = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          stepSize: 5000\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.airPollutionIndex;\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      $scope.airPollutionIndex = response.aqi;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\nAA.controller(\"populationCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log('In pop ctrl', data);\n    $scope.popcy = data.popcy;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    console.log('In pop assign data');\n    $scope.populationNum = $scope.popcy;\n  };\n\n  //end of controller\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($timeout, $scope, rentService, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    $scope.onBoardDataStudio = data.studio_county;\n    $scope.onBoardDataOne = data.one_bed_county;\n    $scope.onBoardDataTwo = data.two_bed_county;\n    $scope.onBoardDataThree = data.three_bed_county;\n    $scope.onBoardDataFour = data.four_bed_county;\n    $scope.assignData();\n  });\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['Stu', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'Rent P/M $',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour],\n        backgroundColor: ['rgba(33, 125, 216, 0.5)', 'rgba(165, 171, 175, 0.5)', 'rgba(4, 82, 160, 0.5)', 'rgba(14, 58, 102, 0.5)', 'rgba(128, 172, 216, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)', 'rgba(72, 72, 72, 0.5)'],\n        borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n        borderWidth: 1\n      }]\n    };\n  };\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          stepSize: 500\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  // $scope.data;\n  //\n  // $scope.getInfo = () => {\n  //   restaurantService.getData().then( (response) => {\n  //     console.log(response);\n  //     $scope.data = response;\n  //   })\n  // }\n  //\n  // $scope.getInfo();\n\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('chartDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/chartDirective.html\",\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      var ctxDir = elem[0].children[0].children[0];\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n      console.log('chartdirective scopedata', scope.chartData);\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n        });\n      }\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n\n      var ctxDir = elem[0].children[0].children[0];\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    scope: {\n      chartData: '=',\n      type: \"=\",\n      options: '='\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      var ctxDir = elem[0].children[0].children[0];\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: options\n        });\n      }\n      scope.$watch('chartData', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"/api/pollution\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      return response.data.data[0];\n    });\n  };\n  //end of service\n});\n\n/*\nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http, $rootScope) {\n  var _this = this;\n\n  var baseUrl = \"/api/zipConversion\";\n\n  var city;\n  this.city = city;\n\n  this.getData = function (obj) {\n    _this.data = {};\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      _this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    });\n  };\n  this.findData = function () {\n    console.log('s1: ', _this.data);\n    $rootScope.$broadcast('eventFired', _this.data);\n    console.log('s2: ', _this.data);\n  };\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","  AA.filter('distance', function(){\n\n    return function(input){\n      if (input != undefined){\n        return input + ' Miles';\n      }\n    }\n  });\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  $scope.clearData = function () {\n    $scope.city = '';\n    $scope.zipcode = '';\n    $scope.state = '';\n  }\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  // Google Scripts for Google Map. ============================================\n\n  // Google Scripts for Auto Complete.==========================================\n  //variables\n  $scope.city;\n  $scope.tempPlace;\n\n  //Use this if we only need zipcode from google -------------------------------\n  //$scope.zipcode;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    //This is restriction for the country code.\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(35);\n      }\n      marker.setIcon(({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      }));\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      $scope.tempPlace = place;\n      inputValidation();\n\n    });\n  }\n\n  const inputValidation = () => {\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n    }\n\n    if ($scope.city && $scope.state) {\n      zipConversionService.city = $scope.city\n      zipConversionService.getData({\n        city: $scope.city,\n        state: $scope.state\n      }).then(response => {\n          zipConversionService.findData();\n\n      });\n    }\n  };\n\n  initMap();\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n","AA.controller(\"airportCtrl\", function($scope, zipConversionService){\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n      $scope.airport = data.airport; // AIRPORT\n      $scope.airportDist = data.airportdist; // AIRPORTDIST\n      $scope.assignData();\n  });\n\n  $scope.assignData = function() {\n    $scope.airport = data.airport;\n    $scope.airportDist = data.airportdist;\n  }\n\n//end of controller\n});\n","AA.controller(\"crimeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.assault = data.crmcyasst;\n    $scope.burglary = data.crmcyburg;\n    $scope.larceny = data.crmcylarc;\n    $scope.murder = data.crmcymurd;\n    $scope.motorVehicleTheft = data.crmcymveh;\n    $scope.personalCrime = data.crmcyperc;\n    $scope.property = data.crmcyproc;\n    $scope.rape = data.crmcyrape;\n    $scope.robbery = data.crmcyrobb;\n    $scope.assignData();\n  });\n\n    $scope.assignData = function() {\n\n      $scope.crimeData = {\n        labels: [\"Assault\", \"Burglary\", \"Larceny\", \"Murder\", \"Auto Theft\", \"Personal Crime\", \"Property\", \"Rape\", \"Robbery\"],\n        datasets: [{\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.8)',\n            'rgba(165, 171, 175, 0.8)',\n            'rgba(4, 82, 160, 0.8)',\n            'rgba(14, 58, 102, 0.8)',\n            'rgba(128, 172, 216, 0.8)',\n            'rgba(72, 72, 72, 0.8)',\n            'rgba(72, 72, 72, 0.8)'\n          ],\n          data:\n          [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery],\n        }]\n      };\n    };\n\n    $scope.crimeOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      }\n    };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    // console.log(data);\n      $scope.avgsaleprice = data.avgsaleprice;\n      $scope.assignData();\n  });\n\n  $scope.assignData = function() {\n    $scope.propertySalePrice = $scope.avgsaleprice;\n  }\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService, zipConversionService){\n\n  $scope.city;\n\n  $scope.$on('eventFired', function (event, data) {\n    $scope.city = zipConversionService.city\n\n    var city = $scope.city\n    var splitCity = city.split(\" \").join(\"+\");\n\n    $scope.getInfo(splitCity);\n  });\n\n  $scope.getInfo = (city) => {\n    hospitalService.getData(city).then( (response) => {\n      $scope.data = response;\n    });\n  };\n\n});\n","AA.controller(\"incomeCtrl\", function ($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log(data);\n    $scope.income15_20 = data.hincy15_20;\n    $scope.income20_25 = data.hincy20_25;\n    $scope.income30_35 = data.hincy30_35;\n    $scope.income40_45 = data.hincy40_45;\n    $scope.income50_60 = data.hincy50_60;\n    $scope.income60_75 = data.hincy60_75;\n    $scope.income75_100 = data.hincy75_100;\n    $scope.assignData();\n  });\n\n    $scope.assignData = function() {\n\n      $scope.incomeData = {\n        labels: [\"$15-20K\", \"$20-25K\", \"$30-35K\", \"$40-45K\", \"$50-60K \", \"$60-75K\", \"$75-100k\"],\n        datasets: [{\n          backgroundColor: [\n            'rgba(33, 125, 216, 0.8)',\n            'rgba(165, 171, 175, 0.8)',\n            'rgba(4, 82, 160, 0.8)',\n            'rgba(14, 58, 102, 0.8)',\n            'rgba(128, 172, 216, 0.8)',\n            'rgba(72, 72, 72, 0.8)',\n            'rgba(72, 72, 72, 0.8)'\n          ],\n          data:\n          [$scope.income15_20, $scope.income20_25, $scope.income30_35, $scope.income40_45, $scope.income50_60, $scope.income60_75, $scope.income75_100],\n        }]\n      };\n    };\n\n    $scope.incomeOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      }\n    };\n    // end of controller\n  });\n","AA.controller(\"languagesCtrl\", function ($timeout, $scope, zipConversionService) {\n\n    $scope.$on('eventFired', function (event, data) {\n        $scope.asian = data.langasian;\n        $scope.english = data.langeng;\n        $scope.spanish = data.langspan;\n        $scope.european = data.langeuro;\n        $scope.other = data.langother;\n        $scope.assignData();\n    });\n\n    $scope.assignData = function () {\n      $scope.langData = {\n        labels: [\n          'Asian', 'English', 'Spanish', 'European', 'Other'\n        ],\n        datasets: [\n          {\n            label: 'Language',\n            data: [\n              $scope.asian, $scope.english, $scope.spanish, $scope.european, $scope.other\n            ],\n            backgroundColor: [\n              'rgba(33, 125, 216, 0.5)',\n              'rgba(165, 171, 175, 0.5)',\n              'rgba(4, 82, 160, 0.5)',\n              'rgba(14, 58, 102, 0.5)',\n              'rgba(128, 172, 216, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)'\n            ],\n            borderColor: [\n              'rgba(33, 125, 216, 1)',\n              'rgba(165, 171, 175, 1)',\n              'rgba(4, 82, 160, 1)',\n              'rgba(14, 58, 102, 1)',\n              'rgba(128, 172, 216, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)'\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n    }\n    $scope.langOptions = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              stepSize: 5000\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n  //end of controller\n  });\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n  $scope.airPollutionIndex;\n\n  $scope.data;\n\n  $scope.getInfo = () => {\n   pollutionService.getData().then( (response) => {\n     $scope.airPollutionIndex = response.aqi;\n   })\n  }\n\n  $scope.getInfo();\n});\n","AA.controller(\"populationCtrl\", function($scope, zipConversionService) {\n\n  $scope.$on('eventFired', function (event, data) {\n    console.log('In pop ctrl', data);\n      $scope.popcy = data.popcy;\n      $scope.assignData();\n  });\n\n  $scope.assignData = function() {\n    console.log('In pop assign data');\n    $scope.populationNum = $scope.popcy;\n  }\n\n//end of controller\n});\n","AA.controller(\"rentCtrl\", function ($timeout, $scope, rentService, zipConversionService) {\n\n    $scope.$on('eventFired', function (event, data) {\n        $scope.onBoardDataStudio = data.studio_county;\n        $scope.onBoardDataOne = data.one_bed_county;\n        $scope.onBoardDataTwo = data.two_bed_county;\n        $scope.onBoardDataThree = data.three_bed_county;\n        $scope.onBoardDataFour = data.four_bed_county;\n        $scope.assignData();\n    });\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'Stu', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'Rent P/M $',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n            ],\n            backgroundColor: [\n              'rgba(33, 125, 216, 0.5)',\n              'rgba(165, 171, 175, 0.5)',\n              'rgba(4, 82, 160, 0.5)',\n              'rgba(14, 58, 102, 0.5)',\n              'rgba(128, 172, 216, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)',\n              'rgba(72, 72, 72, 0.5)'\n            ],\n            borderColor: [\n              'rgba(33, 125, 216, 1)',\n              'rgba(165, 171, 175, 1)',\n              'rgba(4, 82, 160, 1)',\n              'rgba(14, 58, 102, 1)',\n              'rgba(128, 172, 216, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)',\n              'rgba(72, 72, 72, 1)'\n            ],\n            borderWidth: 1\n          }\n        ]\n      };\n    }\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              stepSize: 500\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n  // $scope.data;\n  //\n  // $scope.getInfo = () => {\n  //   restaurantService.getData().then( (response) => {\n  //     console.log(response);\n  //     $scope.data = response;\n  //   })\n  // }\n  //\n  // $scope.getInfo();\n\n});\n","// Start: This is the doughnut chart directive =================================\nAA.directive('chartDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/chartDirective.html\",\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        let ctxDir = elem[0].children[0].children[0];\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n        console.log('chartdirective scopedata', scope.chartData)\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n          });\n        }\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n      }\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n\n        let ctxDir = elem[0].children[0].children[0];\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n      }\n    }\n  });\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      scope: {\n        chartData: '=',\n        type: \"=\",\n        options: '='\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        let ctxDir = elem[0].children[0].children[0];\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: options\n          });\n        }\n        scope\n          .$watch('chartData', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, newValue, scope.type, scope.options);\n          });\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){});\n","AA.service(\"homeValueService\", function($http){});\n","AA.service(\"hospitalService\", function($http){});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"/api/pollution\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    return response.data.data[0];\n\n  })\n}\n//end of service\n});\n\n/*\nNOTES FOR A SWITCH:\n\n0 - 49 GOOD\n50 - 150 MODERATE\n151 - 350 UNHEALTHY\n351 - 420 VERY UNHEALTHY\n421 up HAZARDOUS\n\n*/\n","AA.service(\"rentService\", function($http){})\n","AA.service(\"restaurantService\", function($http){});\n","AA.service(\"zipConversionService\", function($http, $rootScope){\n\n  const baseUrl = \"/api/zipConversion\";\n\n  var city;\n  this.city = city;\n\n  this.getData = (obj) => {\n    this.data = {};\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then( (response) => {\n      this.data = response.data.response.result.package.item;\n      return response.data.response.result.package.item;\n    })\n  }\n  this.findData = () => {\n    console.log('s1: ', this.data);\n    $rootScope.$broadcast('eventFired', this.data);\n    console.log('s2: ', this.data);\n  }\n//end of service\n});\n"]}