{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","controller","$scope","$interval","zipConversionService","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","$applyAsync","console","log","city","zipcode","tempPlace","initMap","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","input","options","componentRestrictions","country","autocomplete","places","Autocomplete","bindTo","infowindow","InfoWindow","marker","Marker","anchorPoint","Point","addListener","close","setVisible","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","setIcon","url","icon","size","Size","origin","anchor","scaledSize","setPosition","inputValidation","index","address_components","length","types","long_name","state","short_name","info","crimeService","assault","burglary","larceny","murder","motorVehicleTheft","personalCrime","property","rape","robbery","getInfo","getData","then","response","crmcyasst","crmcyburg","crmcylarc","crmcymurd","crmcymveh","crmcyperc","crmcyproc","crmcyrape","crmcyrobb","assignData","crimeData","doughnutOptions","responsive","maintainAspectRatio","legend","display","title","text","homeValueService","hospitalService","pollutionService","rentService","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","studio_county","one_bed_county","two_bed_county","three_bed_county","four_bed_county","medianRentData","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","beginAtZero","$watch","newValue","oldValue","service","$http","baseUrl","obj","method","result","package","item","results"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  // $scope.clearData = function () {\n  //   $scope.city = '';\n  //   $scope.zipcode = '';\n  //   $scope.state = '';\n  // };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  $interval(function () {\n    $scope.$applyAsync(function () {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n\n  // Google Scripts for Google Map and AutoComplete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      // if (!place.geometry) {\n      //   window.alert(\"Autocomplete's returned place contains no geometry\");\n      //   return;\n      // }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n      marker.setIcon({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      });\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      $scope.tempPlace = place;\n      inputValidation();\n    });\n  }\n\n  var inputValidation = function inputValidation() {\n    console.log('Main control Input Validation initatied');\n\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n    }\n\n    // if (!$scope.zipcode && $scope.city && $scope.state) {\n    //   zipConversionService.getData({\n    //     city: $scope.city,\n    //     state: $scope.state\n    //   });\n    //   console.log(\"calling zipConversionService\");\n    // }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n  }; // ============= END inputValidation ============\n\n  //Initiating Pre Render\n  initMap();\n\n  // // Google Scripts=====================================\n\n});\n\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n  $scope.assault;\n  $scope.burglary;\n  $scope.larceny;\n  $scope.murder;\n  $scope.motorVehicleTheft;\n  $scope.personalCrime;\n  $scope.property;\n  $scope.rape;\n  $scope.robbery;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.assault = response.crmcyasst;\n      $scope.burglary = response.crmcyburg;\n      $scope.larceny = response.crmcylarc;\n      $scope.murder = response.crmcymurd;\n      $scope.motorVehicleTheft = response.crmcymveh;\n      $scope.personalCrime = response.crmcyperc;\n      $scope.property = response.crmcyproc;\n      $scope.rape = response.crmcyrape;\n      $scope.robbery = response.crmcyrobb;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.crimeData = {\n      labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n      datasets: [{\n        backgroundColor: [\"#2ecc71\", \"#3498db\", \"#95a5a6\", \"#9b59b6\", \"#f1c40f\", \"#e74c3c\", \"#34495e\"],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n        // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n      }]\n    };\n    console.log($scope.crimeData);\n    console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n  };\n\n  $scope.doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    title: {\n      display: true,\n      text: 'Crime Rates'\n    }\n    // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n    // }   ] }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.onBoardDataStudio;\n  $scope.onBoardDataOne;\n  $scope.onBoardDataTwo;\n  $scope.onBoardDataThree;\n  $scope.onBoardDataFour;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.onBoardDataStudio = response.studio_county;\n      $scope.onBoardDataOne = response.one_bed_county;\n      $scope.onBoardDataTwo = response.two_bed_county;\n      $scope.onBoardDataThree = response.three_bed_county;\n      $scope.onBoardDataFour = response.four_bed_county;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['S', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'apartments',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n        // 5, 10, -3, 7, -6\n        ],\n        backgroundColor: \"rgba(153,255,51,0.4)\"\n      }]\n    };\n    console.log($scope.medianRentData);\n  };\n\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          // beginAtZero: true,\n          stepSize: 50\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            title: {\n\n              display: false,\n              text: 'Predicted world population (millions) in 2050'\n\n            }\n            // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n            // }   ] }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n\n      return response.data.response.result.package.item;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http) {\n\n  var baseUrl = \"/api/zipConversion\";\n\n  this.getData = function (obj) {\n    console.log(obj);\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      console.log(response.data);\n      return response.data;\n    });\n  };\n\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  // $scope.clearData = function () {\n  //   $scope.city = '';\n  //   $scope.zipcode = '';\n  //   $scope.state = '';\n  // };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n\n  $interval(() => {\n    $scope.$applyAsync(() => {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n\n\n  // Google Scripts for Google Map and AutoComplete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n    \n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      // if (!place.geometry) {\n      //   window.alert(\"Autocomplete's returned place contains no geometry\");\n      //   return;\n      // }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n      marker.setIcon(({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      }));\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      $scope.tempPlace = place;\n      inputValidation();\n\n    });\n  }\n\n  const inputValidation = () => {\n    console.log('Main control Input Validation initatied');\n\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n    }\n\n    // if (!$scope.zipcode && $scope.city && $scope.state) {\n    //   zipConversionService.getData({\n    //     city: $scope.city,\n    //     state: $scope.state\n    //   });\n    //   console.log(\"calling zipConversionService\");\n    // }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n\n  }; // ============= END inputValidation ============\n\n  //Initiating Pre Render\n  initMap();\n\n\n  // // Google Scripts=====================================\n\n\n\n});\n\n\n\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */","AA\n  .controller(\"crimeCtrl\", function ($scope, crimeService) {\n    $scope.assault;\n    $scope.burglary;\n    $scope.larceny;\n    $scope.murder;\n    $scope.motorVehicleTheft;\n    $scope.personalCrime;\n    $scope.property;\n    $scope.rape;\n    $scope.robbery;\n\n    $scope.getInfo = () => {\n      crimeService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.assault = response.crmcyasst;\n          $scope.burglary = response.crmcyburg;\n          $scope.larceny = response.crmcylarc;\n          $scope.murder = response.crmcymurd;\n          $scope.motorVehicleTheft = response.crmcymveh;\n          $scope.personalCrime = response.crmcyperc;\n          $scope.property = response.crmcyproc;\n          $scope.rape = response.crmcyrape;\n          $scope.robbery = response.crmcyrobb;\n          $scope.assignData();\n\n        })\n    }\n\n    $scope.getInfo();\n\n    $scope.assignData = function() {\n       $scope.crimeData = {\n    labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n    datasets: [{\n      backgroundColor: [\n        \"#2ecc71\",\n        \"#3498db\",\n        \"#95a5a6\",\n        \"#9b59b6\",\n        \"#f1c40f\",\n        \"#e74c3c\",\n        \"#34495e\"\n      ],\n      data:\n      [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n    }]\n  };\n         console.log($scope.crimeData);\n         console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n    };\n\n    $scope.doughnutOptions = {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n                  display: false\n                }\n              },\n              title: {\n                display: true,\n                text: 'Crime Rates'\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA\n  .controller(\"rentCtrl\", function ($scope, rentService) {\n\n    $scope.onBoardDataStudio;\n    $scope.onBoardDataOne;\n    $scope.onBoardDataTwo;\n    $scope.onBoardDataThree;\n    $scope.onBoardDataFour;\n\n\n    $scope.getInfo = () => {\n      rentService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.onBoardDataStudio = response.studio_county;\n          $scope.onBoardDataOne = response.one_bed_county;\n          $scope.onBoardDataTwo = response.two_bed_county;\n          $scope.onBoardDataThree = response.three_bed_county;\n          $scope.onBoardDataFour = response.four_bed_county;\n          $scope.assignData();\n        })\n    };\n\n    $scope.getInfo();\n\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'S', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'apartments',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n              // 5, 10, -3, 7, -6\n            ],\n            backgroundColor: \"rgba(153,255,51,0.4)\"\n          }\n        ]\n      };\n         console.log($scope.medianRentData);\n    }\n\n \n\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // beginAtZero: true,\n              stepSize: 50\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options:\n            {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              title: {\n\n                display: false,\n                text: 'Predicted world population (millions) in 2050'\n\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = (obj) => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n\n    return response.data.response.result.package.item;\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"zipConversionService\", function($http){\n\nconst baseUrl = \"/api/zipConversion\";\n\n\nthis.getData = (obj) => {\n  console.log(obj);\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    console.log(response.data);\n    return response.data;\n  })\n}\n\n//end of service\n});\n"]}