{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/footerDirective.js","directives/headerDirective.js","directives/lineDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js","service/zipConversionService.js"],"names":["AA","angular","module","controller","$scope","$interval","zipConversionService","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","$applyAsync","console","log","city","zipcode","tempPlace","initMap","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","input","controls","ControlPosition","TOP_LEFT","push","options","componentRestrictions","country","autocomplete","places","Autocomplete","bindTo","infowindow","InfoWindow","marker","Marker","anchorPoint","Point","addListener","close","setVisible","place","getPlace","geometry","window","alert","viewport","fitBounds","setCenter","location","setZoom","setIcon","url","icon","size","Size","origin","anchor","scaledSize","setPosition","address","address_components","short_name","join","setContent","name","open","i","length","types","innerHTML","long_name","formatted_address","inputValidation","index","state","undefined","getData","info","crimeService","assault","burglary","larceny","murder","motorVehicleTheft","personalCrime","property","rape","robbery","getInfo","then","response","crmcyasst","crmcyburg","crmcylarc","crmcymurd","crmcymveh","crmcyperc","crmcyproc","crmcyrape","crmcyrobb","assignData","crimeData","doughnutOptions","responsive","maintainAspectRatio","legend","display","title","text","homeValueService","hospitalService","pollutionService","rentService","onBoardDataStudio","onBoardDataOne","onBoardDataTwo","onBoardDataThree","onBoardDataFour","studio_county","one_bed_county","two_bed_county","three_bed_county","four_bed_county","medianRentData","optionsObj","scales","yAxes","ticks","stepSize","stacked","xAxes","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","beginAtZero","$watch","newValue","oldValue","service","$http","baseUrl","obj","method","result","package","item","results"],"mappings":"AAAA;;;;;ACGA,IAAMA,KAAKC,QAAQC,OAAO,aAAa;;;;ADMvC;;;;;;AELAF,GAAGG,WAAW,4DAAY,UAAUC,QAAQC,WAAWC,sBAAsB;;;;;;;EAO3EF,OAAOG,UAAU;;EAEjBH,OAAOI,WAAW;IAChBC,QAAQ,CAAC,OAAO,UAAU,UAAU,UAAU,QAAQ,UAAU,WAAW;IAC3EC,UAAU,CAAC;MACTC,OAAO;MACPC,MAAM,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;MACjDC,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA,yBACA;MAEFC,aAAa,CACX,yBACA,0BACA,uBACA,wBACA,0BACA,uBACA,uBACA;MAEFC,aAAa;;;;EAIjBX,OAAOY,WAAW;IAChBP,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;IACvCC,UAAU,CAAC;MACTC,OAAO;MACPC,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG;MAC5BC,iBAAiB;OAChB;MACDF,OAAO;MACPC,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG;MAC3BC,iBAAiB;;;;EAIrBT,OAAOa,QAAQ;IACbR,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;IACvCC,UAAU,CAAC;MACTG,iBAAiB,CACf,WACA,WACA,WACA,WACA,WACA,WACA;MAEFD,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;;;;EAIlCR,OAAOc,SAAS;IACdT,QAAQ,CAAC,YAAY,YAAY,YAAY,YAAY;IACzDC,UAAU,CAAC;MACTC,OAAO;MACPE,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA;MAEFD,MAAM,CAAC,KAAK,MAAM,KAAK,KAAK;;;;EAIhCR,OAAOe,QAAQ;IACbV,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;IACvCC,UAAU,CAAC;MACTG,iBAAiB,CACf,2BACA,4BACA,yBACA,0BACA,4BACA,yBACA;MAEFD,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4ClCR,OAAOgB,aAAa;EACpBhB,OAAOiB,aAAa;EACpBjB,OAAOkB,aAAa;EACpBlB,OAAOmB,aAAa;EACpBnB,OAAOoB,aAAa;EACpBpB,OAAOqB,aAAa;;EAIpBpB,UAAU,YAAM;IACdD,OAAOsB,YAAY,YAAM;;;MAGvBtB,OAAOgB,aAAahB,OAAOgB,eAAe,QAAQ,SAAS;MAC3DhB,OAAOiB,aAAajB,OAAOgB,eAAe,QAAQ,SAAS;MAC3DO,QAAQC,IAAIxB,OAAOgB,YAAYhB,OAAOiB;MACtCjB,OAAOkB,aAAalB,OAAOkB,eAAe,QAAQ,aAAa;MAC/DlB,OAAOmB,aAAanB,OAAOkB,eAAe,QAAQ,aAAa;MAC/DlB,OAAOoB,aAAapB,OAAOoB,eAAe,cAAc,UAAU;MAClEpB,OAAOqB,aAAarB,OAAOoB,eAAe,cAAc,UAAU;;;KAGnE;;;;EAKHpB,OAAOyB;EACPzB,OAAO0B;EACP1B,OAAO2B;;EAEP,SAASC,UAAU;IACjB,IAAIC,MAAM,IAAIC,OAAOC,KAAKC,IAAIC,SAASC,eAAe,QAAQ;MAC5DC,QAAQ;QACNC,KAAK;QACLC,KAAK,CAAC;;MAERC,MAAM;;IAER,IAAIC,QAAQN,SAASC,eAAe;IACpCL,IAAIW,SAASV,OAAOC,KAAKU,gBAAgBC,UAAUC,KAAKJ;;IAExD,IAAIK,UAAU;MACZC,uBAAuB;QACrBC,SAAS;;;;IAIb,IAAIC,eAAe,IAAIjB,OAAOC,KAAKiB,OAAOC,aAAaV,OAAOK;IAC9DG,aAAaG,OAAO,UAAUrB;;IAE9B,IAAIsB,aAAa,IAAIrB,OAAOC,KAAKqB;IACjC,IAAIC,SAAS,IAAIvB,OAAOC,KAAKuB,OAAO;MAClCzB,KAAKA;MACL0B,aAAa,IAAIzB,OAAOC,KAAKyB,MAAM,GAAG,CAAC;;;IAGzCT,aAAaU,YAAY,iBAAiB,YAAY;MACpDN,WAAWO;MACXL,OAAOM,WAAW;MAClB,IAAIC,QAAQb,aAAac;;MAEzB7D,OAAO2B,YAAYiC;;MAEnB,IAAI,CAACA,MAAME,UAAU;QACnBC,OAAOC,MAAM;QACb;;;;MAIF,IAAIJ,MAAME,SAASG,UAAU;QAC3BpC,IAAIqC,UAAUN,MAAME,SAASG;aACxB;QACLpC,IAAIsC,UAAUP,MAAME,SAASM;QAC7BvC,IAAIwC,QAAQ;;MAEdhB,OAAOiB,QAAS;QACdC,KAAKX,MAAMY;QACXC,MAAM,IAAI3C,OAAOC,KAAK2C,KAAK,IAAI;QAC/BC,QAAQ,IAAI7C,OAAOC,KAAKyB,MAAM,GAAG;QACjCoB,QAAQ,IAAI9C,OAAOC,KAAKyB,MAAM,IAAI;QAClCqB,YAAY,IAAI/C,OAAOC,KAAK2C,KAAK,IAAI;;MAEvCrB,OAAOyB,YAAYlB,MAAME,SAASM;MAClCf,OAAOM,WAAW;;MAElB,IAAIoB,UAAU;MACd,IAAInB,MAAMoB,oBAAoB;QAC5BD,UAAU,CACPnB,MAAMoB,mBAAmB,MAAMpB,MAAMoB,mBAAmB,GAAGC,cAAc,IACzErB,MAAMoB,mBAAmB,MAAMpB,MAAMoB,mBAAmB,GAAGC,cAAc,IACzErB,MAAMoB,mBAAmB,MAAMpB,MAAMoB,mBAAmB,GAAGC,cAAc,IAC1EC,KAAK;;;MAGT/B,WAAWgC,WAAW,kBAAkBvB,MAAMwB,OAAO,kBAAkBL;MACvE5B,WAAWkC,KAAKxD,KAAKwB;;;MAGrB,KAAK,IAAIiC,IAAI,GAAGA,IAAI1B,MAAMoB,mBAAmBO,QAAQD,KAAK;QACxD,IAAI1B,MAAMoB,mBAAmBM,GAAGE,MAAM,MAAM,eAAe;UACzDvD,SAASC,eAAe,eAAeuD,YAAY7B,MAAMoB,mBAAmBM,GAAGI;;QAEjF,IAAI9B,MAAMoB,mBAAmBM,GAAGE,MAAM,MAAM,WAAW;UACrDvD,SAASC,eAAe,WAAWuD,YAAY7B,MAAMoB,mBAAmBM,GAAGI;;;;MAI/EzD,SAASC,eAAe,YAAYuD,YAAY7B,MAAM+B;MACtD1D,SAASC,eAAe,OAAOuD,YAAY7B,MAAME,SAASM,SAAShC;MACnEH,SAASC,eAAe,OAAOuD,YAAY7B,MAAME,SAASM,SAAS/B;;;;EAIvE,IAAMuD,kBAAkB,SAAlBA,kBAAwB;IAC5BrE,QAAQC,IAAI;;IAEZ,KAAK,IAAIqE,QAAQ,GAAGA,QAAQ7F,OAAO2B,UAAUqD,mBAAmBO,QAAQM,SAAS;MAC/E,IAAI7F,OAAO2B,UAAUqD,mBAAmBa,OAAOL,MAAM,OAAO,YAAY;QACtExF,OAAOyB,OAAOzB,OAAO2B,UAAUqD,mBAAmBa,OAAOH;;;;;;;MAO3D,IAAI1F,OAAO2B,UAAUqD,mBAAmBa,OAAOL,MAAM,OAAO,+BAA+B;QACzFxF,OAAO8F,QAAQ9F,OAAO2B,UAAUqD,mBAAmBa,OAAOZ;;;MAG5D,IAAIjF,OAAOyB,SAASsE,aAAa/F,OAAO0B,YAAYqE,WAAW;QAC7D/B,MAAM;;;;IAIV,IAAI,CAAChE,OAAO0B,WAAW1B,OAAOyB,QAAQzB,OAAO8F,OAAO;MAClD5F,qBAAqB8F,QAAQ;QAC3BvE,MAAMzB,OAAOyB;QACbqE,OAAO9F,OAAO8F;;MAEhBvE,QAAQC,IAAI;;;IAGdD,QAAQ0E,KAAK,uBAAuBjG,OAAOyB;IAC3CF,QAAQ0E,KAAK,0BAA0BjG,OAAO0B;IAC9CH,QAAQ0E,KAAK,wBAAwBjG,OAAO8F;;;;EAK9ClE;;;;;;;AFhCF;;AGtQAhC,GACGG,WAAW,wCAAa,UAAUC,QAAQkG,cAAc;EACvDlG,OAAOmG;EACPnG,OAAOoG;EACPpG,OAAOqG;EACPrG,OAAOsG;EACPtG,OAAOuG;EACPvG,OAAOwG;EACPxG,OAAOyG;EACPzG,OAAO0G;EACP1G,OAAO2G;;EAEP3G,OAAO4G,UAAU,YAAM;IACrBV,aACGF,UACAa,KAAK,UAACC,UAAa;MAClBvF,QAAQC,IAAIsF;MACZ9G,OAAOmG,UAAUW,SAASC;MAC1B/G,OAAOoG,WAAWU,SAASE;MAC3BhH,OAAOqG,UAAUS,SAASG;MAC1BjH,OAAOsG,SAASQ,SAASI;MACzBlH,OAAOuG,oBAAoBO,SAASK;MACpCnH,OAAOwG,gBAAgBM,SAASM;MAChCpH,OAAOyG,WAAWK,SAASO;MAC3BrH,OAAO0G,OAAOI,SAASQ;MACvBtH,OAAO2G,UAAUG,SAASS;MAC1BvH,OAAOwH;;;;EAKbxH,OAAO4G;;EAEP5G,OAAOwH,aAAa,YAAW;IAC5BxH,OAAOyH,YAAY;MACtBpH,QAAQ,CAAC,WAAW,YAAY,WAAW,UAAU,cAAc,YAAY,YAAY,QAAQ;MACnGC,UAAU,CAAC;QACTG,iBAAiB,CACf,WACA,WACA,WACA,WACA,WACA,WACA;QAEFD,MACA,CAACR,OAAOmG,SAASnG,OAAOoG,UAAUpG,OAAOqG,SAASrG,OAAOsG,QAAQtG,OAAOuG,mBAAmBvG,OAAOwG,eAAexG,OAAOyG,UAAUzG,OAAO0G,MAAM1G,OAAO2G;;;;IAInJpF,QAAQC,IAAIxB,OAAOyH;IACnBlG,QAAQC,IAAIxB,OAAOmG,SAASnG,OAAOoG,UAAUpG,OAAOqG,SAASrG,OAAOsG,QAAQtG,OAAOuG,mBAAmBvG,OAAOwG,eAAexG,OAAOyG,UAAUzG,OAAO0G,MAAM1G,OAAO2G;;;EAGtK3G,OAAO0H,kBAAkB;IACfC,YAAY;IACZC,qBAAqB;IACrBC,QAAQ;MACNC,SAAS;MACTzH,QAAQ;QACNyH,SAAS;;;IAGbC,OAAO;MACLD,SAAS;MACTE,MAAM;;;;;;;AHkQtB;;AIpUApI,GAAGG,WAAW,gDAAiB,UAASC,QAAQiI,kBAAiB;;EAEjEjI,OAAOQ;;EAEPR,OAAO4G,UAAU,YAAM;IACrBqB,iBAAiBjC,UAAUa,KAAM,UAACC,UAAa;MAC9CvF,QAAQC,IAAIsF;MACX9G,OAAOQ,OAAOsG;;;;EAIlB9G,OAAO4G;;;;AJ0UP;;AKrVAhH,GAAGG,WAAW,8CAAgB,UAASC,QAAQkI,iBAAgB;;EAE/DlI,OAAOQ;;EAEPR,OAAO4G,UAAU,YAAM;IACrBsB,gBAAgBlC,UAAUa,KAAM,UAACC,UAAa;MAC5CvF,QAAQC,IAAIsF;MACZ9G,OAAOQ,OAAOsG;;;;EAIlB9G,OAAO4G;;ALyVP;;AMpWAhH,GAAGG,WAAW,gDAAiB,UAASC,QAAQmI,kBAAiB;;EAEjEnI,OAAOQ;;EAEPR,OAAO4G,UAAU,YAAM;IACtBuB,iBAAiBnC,UAAUa,KAAM,UAACC,UAAa;MAC7CvF,QAAQC,IAAIsF;MACZ9G,OAAOQ,OAAOsG;;;;EAIjB9G,OAAO4G;;;;AN0WP;;AOrXAhH,GACGG,WAAW,sCAAY,UAAUC,QAAQoI,aAAa;;EAErDpI,OAAOqI;EACPrI,OAAOsI;EACPtI,OAAOuI;EACPvI,OAAOwI;EACPxI,OAAOyI;;EAGPzI,OAAO4G,UAAU,YAAM;IACrBwB,YACGpC,UACAa,KAAK,UAACC,UAAa;MAClBvF,QAAQC,IAAIsF;MACZ9G,OAAOqI,oBAAoBvB,SAAS4B;MACpC1I,OAAOsI,iBAAiBxB,SAAS6B;MACjC3I,OAAOuI,iBAAiBzB,SAAS8B;MACjC5I,OAAOwI,mBAAmB1B,SAAS+B;MACnC7I,OAAOyI,kBAAkB3B,SAASgC;MAClC9I,OAAOwH;;;;EAIbxH,OAAO4G;;EAGP5G,OAAOwH,aAAa,YAAY;IAC9BxH,OAAO+I,iBAAiB;MACtB1I,QAAQ,CACN,KAAK,OAAO,OAAO,OAAO;MAE5BC,UAAU,CACR;QACEC,OAAO;QACPC,MAAM,CACJR,OAAOqI,mBAAmBrI,OAAOsI,gBAAgBtI,OAAOuI,gBAAgBvI,OAAOwI,kBAAkBxI,OAAOyI;;;QAG1GhI,iBAAiB;;;IAIpBc,QAAQC,IAAIxB,OAAO+I;;;EAKxB/I,OAAOgJ,aAAa;IAClBnB,QAAQ;MACNC,SAAS;MACTzH,QAAQ;QACNyH,SAAS;;;IAGbmB,QAAQ;MACNC,OAAO,CACL;QACEC,OAAO;;UAELC,UAAU;;QAEZC,SAAS;;MAGbC,OAAO,CACL;QACED,SAAS;;;;;;;AP+WrB;;AQlbAzJ,GAAGG,WAAW,kDAAkB,UAASC,QAAQuJ,mBAAkB;;EAEnEvJ,OAAOQ;;EAEPR,OAAO4G,UAAU,YAAM;IACrB2C,kBAAkBvD,UAAUa,KAAM,UAACC,UAAa;MAC9CvF,QAAQC,IAAIsF;MACZ9G,OAAOQ,OAAOsG;;;;EAIlB9G,OAAO4G;;ARsbP;;;AShcAhH,GAAG4J,UAAU,mBAAmB,YAAY;;EAE1C,OAAO;IACLC,UAAU;IACVC,aAAa;;;;ATucjB;;;AU3cA9J,GAAG4J,UAAU,mBAAmB,YAAY;;EAE1C,OAAO;IACLC,UAAU;IACVC,aAAa;;;;AVkdjB;;;AWtdA9J,GACG4J,UAAU,iBAAiB,YAAY;EACtC,OAAO;IACLC,UAAU,KAAKC,aAAa;;IAE5BC,OAAO;MACLC,WAAW;MACXC,MAAM;;IAERC,MAAM,SAAA,KAAUH,OAAOI,MAAMC,OAAOC,MAAM;MACxC1I,QAAQC,IAAI,uCAAuCuI,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAEhF,IAAIC,SAASJ,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAE1C,IAAIE,aAAaC,kBAAkBF,QAAQR,MAAMC,WAAWD,MAAME,MAAMF,MAAM/G;;MAE9E,SAASyH,kBAAkBC,cAAcC,cAAcV,MAAMjH,SAAS;QACpE,OAAO,IAAI4H,MAAMF,cAAc;UAC7BT,MAAMA;UACNrJ,MAAM+J;UACN3H,SAAS;YACPiF,QAAQ;cACNC,SAAS;cACTzH,QAAQ;;gBAENyH,SAAS;;;YAGbmB,QAAQ;cACNC,OAAO,CACL;gBACEC,OAAO;kBACLsB,aAAa;;;;;;;;MAS3Bd,MACGe,OAAO,QAAQ,UAAUC,UAAUC,UAAUjB,OAAO;QACnDU,kBAAkBF,QAAQR,MAAMC,WAAWe;;;;;;;;AX6dvD;;;AYxgBA/K,GAAG4J,UAAU,gBAAgB,YAAY;;EAEvC,OAAO;IACLC,UAAU;IACVC,aAAa;;;;AZ+gBjB;;AaphBA9J,GACG4J,UAAU,gBAAgB,YAAY;EACrC,OAAO;IACLC,UAAU,KAAKC,aAAa;;IAE5BC,OAAO;MACLC,WAAW;MACXC,MAAM;;IAERC,MAAM,SAAA,KAAUH,OAAOI,MAAMC,OAAOC,MAAM;MACxC1I,QAAQC,IAAI,uCAAuCuI,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAEhF,IAAIC,SAASJ,KAAK,GAAGG,SAAS,GAAGA,SAAS;;MAE1C,IAAIE,aAAaC,kBAAkBF,QAAQR,MAAMC,WAAWD,MAAME,MAAMF,MAAM/G;;MAG9E,SAASyH,kBAAkBC,cAAcC,cAAcV,MAAMjH,SAAS;QACpE,OAAO,IAAI4H,MAAMF,cAAc;UAC7BT,MAAMA;UACNrJ,MAAM+J;UACN3H,SACA;YACE+E,YAAY;YACZC,qBAAqB;YACrBC,QAAQ;cACNC,SAAS;cACTzH,QAAQ;;gBAENyH,SAAS;;;YAGbC,OAAO;;cAELD,SAAS;cACTE,MAAM;;;;;;;;;MASd2B,MACGe,OAAO,QAAQ,UAAUC,UAAUC,UAAUjB,OAAO;QACnDU,kBAAkBF,QAAQR,MAAMC,WAAWe;;;;;AbuhBvD;;AcrkBA/K,GAAGiL,QAAQ,0BAAgB,UAASC,OAAM;;EAE1C,IAAMC,UAAU;;EAGhB,KAAK/E,UAAU,UAACgF,KAAQ;IACtB,OAAOF,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;MACLvK,MAAMwK;OACLnE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF,SAAStG,KAAKsG,SAASoE,OAAOC,QAAQC;;MAElD,OAAOtE,SAAStG,KAAKsG,SAASoE,OAAOC,QAAQC;;;;;;Ad4kBjD;;AezlBAxL,GAAGiL,QAAQ,8BAAoB,UAASC,OAAM;;EAE5C,IAAMC,UAAU;;;EAGhB,KAAK/E,UAAU,YAAM;IACnB,OAAO8E,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;OACJlE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF;MACZ,OAAOA,SAAStG,KAAK6K;;;;;;AfimB3B;;AgB5mBAzL,GAAGiL,QAAQ,6BAAmB,UAASC,OAAM;;EAE7C,IAAMC,UAAU;;EAGhB,KAAK/E,UAAU,YAAM;IACnB,OAAO8E,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;OACJlE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF,SAAStG,KAAK6K;MAC1B,OAAOvE,SAAStG,KAAK6K;;;;;;AhBmnBzB;;AiB9nBAzL,GAAGiL,QAAQ,8BAAoB,UAASC,OAAM;;EAE9C,IAAMC,UAAU;;EAEhB,KAAK/E,UAAU,YAAM;IACnB,OAAO8E,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;OACJlE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF,SAAStG,KAAK6K;MAC1B,OAAOvE,SAAStG,KAAK6K;;;;;;AjBsoBzB;;AkBhpBAzL,GAAGiL,QAAQ,yBAAe,UAASC,OAAM;;EAEzC,IAAMC,UAAU;;EAGhB,KAAK/E,UAAU,YAAM;IACnB,OAAO8E,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;OACJlE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF,SAAStG,KAAKsG,SAASoE,OAAOC,QAAQC;MAClD,OAAOtE,SAAStG,KAAKsG,SAASoE,OAAOC,QAAQC;;;;;;AlBupBjD;;AmBlqBAxL,GAAGiL,QAAQ,+BAAqB,UAASC,OAAM;;EAE/C,IAAMC,UAAU;;EAGhB,KAAK/E,UAAU,YAAM;IACnB,OAAO8E,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;OACJlE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF,SAAStG,KAAK6K;MAC1B,OAAOvE,SAAStG,KAAK6K;;;;;;AnByqBzB;;AoBprBAzL,GAAGiL,QAAQ,kCAAwB,UAASC,OAAM;;EAElD,IAAMC,UAAU;;EAGhB,KAAK/E,UAAU,UAACgF,KAAQ;IACtBzJ,QAAQC,IAAIwJ;IACZ,OAAOF,MAAM;MACXG,QAAQ;MACR1G,KAAKwG;MACLvK,MAAMwK;OACLnE,KAAM,UAACC,UAAa;MACrBvF,QAAQC,IAAIsF,SAAStG;MACrB,OAAOsG,SAAStG;;;;;IAbpB","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  // $scope.clearData = function () {\n  //   $scope.city = '';\n  //   $scope.zipcode = '';\n  //   $scope.state = '';\n  // };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  $interval(function () {\n    $scope.$applyAsync(function () {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n\n  // // Google Scripts for Google Map and AutoComplete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      $scope.tempPlace = place;\n\n      if (!place.geometry) {\n        window.alert(\"Autocomplete's returned place contains no geometry\");\n        return;\n      }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n      marker.setIcon({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      });\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      var address = '';\n      if (place.address_components) {\n        address = [place.address_components[0] && place.address_components[0].short_name || '', place.address_components[1] && place.address_components[1].short_name || '', place.address_components[2] && place.address_components[2].short_name || ''].join(' ');\n      }\n\n      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);\n      infowindow.open(map, marker);\n\n      //Location details\n      for (var i = 0; i < place.address_components.length; i++) {\n        if (place.address_components[i].types[0] == 'postal_code') {\n          document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;\n        }\n        if (place.address_components[i].types[0] == 'country') {\n          document.getElementById('country').innerHTML = place.address_components[i].long_name;\n        }\n      }\n\n      document.getElementById('location').innerHTML = place.formatted_address;\n      document.getElementById('lat').innerHTML = place.geometry.location.lat();\n      document.getElementById('lon').innerHTML = place.geometry.location.lng();\n    });\n  }\n\n  var inputValidation = function inputValidation() {\n    console.log('Bob');\n\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      //     if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n      //       $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      //     }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if (!$scope.zipcode && $scope.city && $scope.state) {\n      zipConversionService.getData({\n        city: $scope.city,\n        state: $scope.state\n      });\n      console.log(\"calling zipConversionService\");\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n  };\n\n  //Initiating Pre Render\n  initMap();\n\n  // // Google Scripts=====================================\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n  $scope.assault;\n  $scope.burglary;\n  $scope.larceny;\n  $scope.murder;\n  $scope.motorVehicleTheft;\n  $scope.personalCrime;\n  $scope.property;\n  $scope.rape;\n  $scope.robbery;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.assault = response.crmcyasst;\n      $scope.burglary = response.crmcyburg;\n      $scope.larceny = response.crmcylarc;\n      $scope.murder = response.crmcymurd;\n      $scope.motorVehicleTheft = response.crmcymveh;\n      $scope.personalCrime = response.crmcyperc;\n      $scope.property = response.crmcyproc;\n      $scope.rape = response.crmcyrape;\n      $scope.robbery = response.crmcyrobb;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.crimeData = {\n      labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n      datasets: [{\n        backgroundColor: [\"#2ecc71\", \"#3498db\", \"#95a5a6\", \"#9b59b6\", \"#f1c40f\", \"#e74c3c\", \"#34495e\"],\n        data: [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n        // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n      }]\n    };\n    console.log($scope.crimeData);\n    console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n  };\n\n  $scope.doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    title: {\n      display: true,\n      text: 'Crime Rates'\n    }\n    // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n    // }   ] }\n  };\n  // end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n'use strict';\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.onBoardDataStudio;\n  $scope.onBoardDataOne;\n  $scope.onBoardDataTwo;\n  $scope.onBoardDataThree;\n  $scope.onBoardDataFour;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.onBoardDataStudio = response.studio_county;\n      $scope.onBoardDataOne = response.one_bed_county;\n      $scope.onBoardDataTwo = response.two_bed_county;\n      $scope.onBoardDataThree = response.three_bed_county;\n      $scope.onBoardDataFour = response.four_bed_county;\n      $scope.assignData();\n    });\n  };\n\n  $scope.getInfo();\n\n  $scope.assignData = function () {\n    $scope.medianRentData = {\n      labels: ['S', '1BR', '2BR', '3BR', '4BR'],\n      datasets: [{\n        label: 'apartments',\n        data: [$scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n        // 5, 10, -3, 7, -6\n        ],\n        backgroundColor: \"rgba(153,255,51,0.4)\"\n      }]\n    };\n    console.log($scope.medianRentData);\n  };\n\n  $scope.optionsObj = {\n    legend: {\n      display: false,\n      labels: {\n        display: false\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          // beginAtZero: true,\n          stepSize: 50\n        },\n        stacked: false\n      }],\n      xAxes: [{\n        stacked: false\n      }]\n    }\n  };\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('lineDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n      function getChartGivenData(chartElement, dataForChart, type, options) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              display: false,\n              labels: {\n\n                display: false\n              }\n            },\n            title: {\n\n              display: false,\n              text: 'Predicted world population (millions) in 2050'\n\n            }\n            // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n            // }   ] }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function (obj) {\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n\n      return response.data.response.result.package.item;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"/api/onBoard\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.response.result.package.item);\n      return response.data.response.result.package.item;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"zipConversionService\", function ($http) {\n\n  var baseUrl = \"/api/zipConversion\";\n\n  this.getData = function (obj) {\n    console.log(obj);\n    return $http({\n      method: \"POST\",\n      url: baseUrl,\n      data: obj\n    }).then(function (response) {\n      console.log(response.data);\n      return response.data;\n    });\n  };\n\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\n\nAA.controller(\"mainCtrl\", function ($scope, $interval, zipConversionService) {\n  // $scope.clearData = function () {\n  //   $scope.city = '';\n  //   $scope.zipcode = '';\n  //   $scope.state = '';\n  // };\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  //  $scope.stackedBarData = {\n  //     labels: [\n  //       'S', '1BR', '2BR', '3BR', '4BR'\n  //     ],\n  //     datasets: [\n  //       {\n  //         label: 'apartments',\n  //         data: [\n  //           // $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n  //          5, 10, -3, 7, -6\n  //         ],\n  //         backgroundColor: \"rgba(153,255,51,0.4)\"\n  //       }\n  //     ]\n  //   };\n\n  //   $scope.optionsObj = {\n  //     legend: {\n  //       display: false,\n  //       labels: {\n  //         display: false\n  //       }\n  //     },\n  //     scales: {\n  //       yAxes: [\n  //         {\n  //           ticks: {\n  //             // beginAtZero: true,\n  //             stepSize: 50\n  //           },\n  //           stacked: false\n  //         }\n  //       ],\n  //       xAxes: [{\n  //         stacked: false\n  //       }]\n  //     }\n  //   };\n\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n\n  $interval(() => {\n    $scope.$applyAsync(() => {\n      //  $scope.chart1Type = $scope.chart1Type;\n      // $scope.chart2Type = $scope.chart2Type;\n      $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n      console.log($scope.chart1Type, $scope.chart2Type);\n      $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n      $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      $scope.chart6Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n      // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n    });\n  }, 10000);\n\n\n  // // Google Scripts for Google Map and AutoComplete.=====================================\n  //variables\n  $scope.city;\n  $scope.zipcode;\n  $scope.tempPlace;\n\n  function initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 40.2338438,\n        lng: -111.65853370000002\n      },\n      zoom: 10\n    });\n    var input = document.getElementById('autocomplete');\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    var options = {\n      componentRestrictions: {\n        country: 'us'\n      }\n    };\n\n    var autocomplete = new google.maps.places.Autocomplete(input, options);\n    autocomplete.bindTo('bounds', map);\n\n    var infowindow = new google.maps.InfoWindow();\n    var marker = new google.maps.Marker({\n      map: map,\n      anchorPoint: new google.maps.Point(0, -29)\n    });\n\n    autocomplete.addListener('place_changed', function () {\n      infowindow.close();\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      $scope.tempPlace = place;\n\n      if (!place.geometry) {\n        window.alert(\"Autocomplete's returned place contains no geometry\");\n        return;\n      }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n      marker.setIcon(({\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(35, 35)\n      }));\n      marker.setPosition(place.geometry.location);\n      marker.setVisible(true);\n\n      var address = '';\n      if (place.address_components) {\n        address = [\n          (place.address_components[0] && place.address_components[0].short_name || ''),\n          (place.address_components[1] && place.address_components[1].short_name || ''),\n          (place.address_components[2] && place.address_components[2].short_name || '')\n        ].join(' ');\n      }\n\n      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);\n      infowindow.open(map, marker);\n\n      //Location details\n      for (var i = 0; i < place.address_components.length; i++) {\n        if (place.address_components[i].types[0] == 'postal_code') {\n          document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;\n        }\n        if (place.address_components[i].types[0] == 'country') {\n          document.getElementById('country').innerHTML = place.address_components[i].long_name;\n        }\n      }\n\n      document.getElementById('location').innerHTML = place.formatted_address;\n      document.getElementById('lat').innerHTML = place.geometry.location.lat();\n      document.getElementById('lon').innerHTML = place.geometry.location.lng();\n    });\n  }\n\n  const inputValidation = () => {\n    console.log('Bob');\n\n    for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n      if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n        $scope.city = $scope.tempPlace.address_components[index].long_name;\n      }\n\n      //     if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n      //       $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n      //     }\n\n      if ($scope.tempPlace.address_components[index].types[0] === 'administrative_area_level_1') {\n        $scope.state = $scope.tempPlace.address_components[index].short_name;\n      }\n\n      if ($scope.city === undefined && $scope.zipcode === undefined) {\n        alert('City or Zipcode is needed. Please try again.');\n      }\n    }\n\n    if (!$scope.zipcode && $scope.city && $scope.state) {\n      zipConversionService.getData({\n        city: $scope.city,\n        state: $scope.state\n      });\n      console.log(\"calling zipConversionService\")\n    }\n\n    console.info('Showing City info: ', $scope.city);\n    console.info('Showing Zipcode info: ', $scope.zipcode);\n    console.info('Showing State info: ', $scope.state);\n\n  };\n\n  //Initiating Pre Render\n  initMap();\n\n\n  // // Google Scripts=====================================\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */","AA\n  .controller(\"crimeCtrl\", function ($scope, crimeService) {\n    $scope.assault;\n    $scope.burglary;\n    $scope.larceny;\n    $scope.murder;\n    $scope.motorVehicleTheft;\n    $scope.personalCrime;\n    $scope.property;\n    $scope.rape;\n    $scope.robbery;\n\n    $scope.getInfo = () => {\n      crimeService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.assault = response.crmcyasst;\n          $scope.burglary = response.crmcyburg;\n          $scope.larceny = response.crmcylarc;\n          $scope.murder = response.crmcymurd;\n          $scope.motorVehicleTheft = response.crmcymveh;\n          $scope.personalCrime = response.crmcyperc;\n          $scope.property = response.crmcyproc;\n          $scope.rape = response.crmcyrape;\n          $scope.robbery = response.crmcyrobb;\n          $scope.assignData();\n\n        })\n    }\n\n    $scope.getInfo();\n\n    $scope.assignData = function() {\n       $scope.crimeData = {\n    labels: [\"assault\", \"burglary\", \"larceny\", \"murder\", \"auto theft\", \"personal\", \"property\", \"rape\", \"robbery\"],\n    datasets: [{\n      backgroundColor: [\n        \"#2ecc71\",\n        \"#3498db\",\n        \"#95a5a6\",\n        \"#9b59b6\",\n        \"#f1c40f\",\n        \"#e74c3c\",\n        \"#34495e\"\n      ],\n      data:\n      [$scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery]\n      // [\"10\", \"90\", \"23\", \"42\", \"67\", \"49\", \"14\", \"39\", \"70\"]\n    }]\n  };\n         console.log($scope.crimeData);\n         console.log($scope.assault, $scope.burglary, $scope.larceny, $scope.murder, $scope.motorVehicleTheft, $scope.personalCrime, $scope.property, $scope.rape, $scope.robbery);\n    };\n\n    $scope.doughnutOptions = {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n                  display: false\n                }\n              },\n              title: {\n                display: true,\n                text: 'Crime Rates'\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            };\n    // end of controller\n  });\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA\n  .controller(\"rentCtrl\", function ($scope, rentService) {\n\n    $scope.onBoardDataStudio;\n    $scope.onBoardDataOne;\n    $scope.onBoardDataTwo;\n    $scope.onBoardDataThree;\n    $scope.onBoardDataFour;\n\n\n    $scope.getInfo = () => {\n      rentService\n        .getData()\n        .then((response) => {\n          console.log(response);\n          $scope.onBoardDataStudio = response.studio_county;\n          $scope.onBoardDataOne = response.one_bed_county;\n          $scope.onBoardDataTwo = response.two_bed_county;\n          $scope.onBoardDataThree = response.three_bed_county;\n          $scope.onBoardDataFour = response.four_bed_county;\n          $scope.assignData();\n        })\n    };\n\n    $scope.getInfo();\n\n\n    $scope.assignData = function () {\n      $scope.medianRentData = {\n        labels: [\n          'S', '1BR', '2BR', '3BR', '4BR'\n        ],\n        datasets: [\n          {\n            label: 'apartments',\n            data: [\n              $scope.onBoardDataStudio, $scope.onBoardDataOne, $scope.onBoardDataTwo, $scope.onBoardDataThree, $scope.onBoardDataFour\n              // 5, 10, -3, 7, -6\n            ],\n            backgroundColor: \"rgba(153,255,51,0.4)\"\n          }\n        ]\n      };\n         console.log($scope.medianRentData);\n    }\n\n \n\n    $scope.optionsObj = {\n      legend: {\n        display: false,\n        labels: {\n          display: false\n        }\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              // beginAtZero: true,\n              stepSize: 50\n            },\n            stacked: false\n          }\n        ],\n        xAxes: [\n          {\n            stacked: false\n          }\n        ]\n      }\n    };\n\n    //end of controller\n  });\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the doughnut chart directive =================================\nAA\n  .directive('lineDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/lineChart.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }\n                ]\n              }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n\n    }\n  });\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n        console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n        let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type, scope.options);\n\n\n        function getChartGivenData(chartElement, dataForChart, type, options) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options:\n            {\n              responsive: true,\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n                labels: {\n\n                  display: false\n                }\n              },\n              title: {\n\n                display: false,\n                text: 'Predicted world population (millions) in 2050'\n\n              }\n              // scales: {   yAxes: [     {       ticks: {         beginAtZero: true       }\n              // }   ] }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = (obj) => {\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n\n    return response.data.response.result.package.item;\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"/api/onBoard\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.response.result.package.item);\n    return response.data.response.result.package.item\n\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"zipConversionService\", function($http){\n\nconst baseUrl = \"/api/zipConversion\";\n\n\nthis.getData = (obj) => {\n  console.log(obj);\n  return $http({\n    method: \"POST\",\n    url: baseUrl,\n    data: obj\n  }).then( (response) => {\n    console.log(response.data);\n    return response.data;\n  })\n}\n\n//end of service\n});\n"]}