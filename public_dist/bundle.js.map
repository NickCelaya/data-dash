{"version":3,"sources":["bundle.js","app.js","mainCrtl.js","controllers/crimeCtrl.js","controllers/homeValueCtrl.js","controllers/hospitalCtrl.js","controllers/pollutionCtrl.js","controllers/rentCtrl.js","controllers/restaurantCtrl.js","directives/doughnutDirective.js","directives/footerDirective.js","directives/headerDirective.js","directives/mapDirective.js","directives/pieDirective.js","service/crimeService.js","service/homeValueService.js","service/hospitalService.js","service/pollutionService.js","service/rentService.js","service/restaurantService.js"],"names":["AA","angular","module","controller","$scope","$interval","testing","baseball","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","lineData","apple","orange","polar","chart1Type","chart2Type","chart3Type","chart4Type","chart5Type","chart6Type","initMap","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","crimeService","getInfo","getData","then","response","console","log","homeValueService","hospitalService","pollutionService","rentService","restaurantService","directive","restrict","templateUrl","scope","chartData","type","link","elem","attrs","ctrl","children","ctxDir","myChartDir","getChartGivenData","chartElement","dataForChart","Chart","options","legend","display","lables","scales","yAxes","ticks","beginAtZero","$watch","newValue","oldValue","title","text","service","$http","baseUrl","method","url","results"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nvar AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n\"use strict\";\n\n/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\nAA.controller(\"mainCtrl\", function ($scope, $interval) {\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: ['rgba(33, 125, 216, 0.2)', 'rgba(165, 171, 175, 0.2)', 'rgba(4, 82, 160, 0.2)', 'rgba(14, 58, 102, 0.2)', 'rgba(128, 172, 216, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)', 'rgba(72, 72, 72, 0.2)'],\n      borderColor: ['rgba(33, 125, 216, 1)', 'rgba(165, 171, 175, 1)', 'rgba(4, 82, 160, 1)', 'rgba(14, 58, 102, 1)', 'rgba(128, 172, 216, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)', 'rgba(72, 72, 72, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\"#217DD8\", \"#A5ABAF\", \"#0452A0\", \"#0E3A66\", \"#80ACD8\", \"#484848\", \"#34495e\"],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: ['rgba(33, 125, 216, 0.8)', 'rgba(165, 171, 175, 0.8)', 'rgba(4, 82, 160, 0.8)', 'rgba(14, 58, 102, 0.8)', 'rgba(128, 172, 216, 0.8)', 'rgba(72, 72, 72, 0.8)', 'rgba(72, 72, 72, 0.8)'],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n  //Google Scripts for Google Map. =====================================\n  //var map;\n\n  function initMap() {\n    $scope.map = new google.maps.Map(document.getElementById('googleMap'), {\n      center: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      zoom: 8\n    });\n  }\n\n  //Initializing the map.\n  initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // // Google Scripts for Auto Complete.=====================================\n  // //variables\n  // $scope.city;\n  // $scope.zipcode;\n  // $scope.tempPlace;\n\n  // // This example displays an address form, using the autocomplete feature\n  // // of the Google Places API to help users fill in the information.\n\n  // // This example requires the Places library. Include the libraries=places\n  // // parameter when you first load the API. For example:\n  // // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  // var placeSearch, autocomplete;\n  // var componentForm = {\n  //   street_number: 'short_name',\n  //   route: 'long_name',\n  //   locality: 'long_name',\n  //   administrative_area_level_1: 'short_name',\n  //   country: 'long_name',\n  //   postal_code: 'short_name'\n  // };\n\n  // function initAutocomplete() {\n\n  //   //Clearing out previous variable.\n  //   $scope.city = '';\n  //   $scope.zipcode = '';\n\n\n  //   // Create the autocomplete object, restricting the search to geographical\n  //   // location types.\n  //   autocomplete = new google.maps.places.Autocomplete(\n  //     /** @type {!HTMLInputElement} */\n  //     (document.getElementById('autocomplete')), {\n  //       types: ['geocode']\n  //     });\n\n  //   // When the user selects an address from the dropdown, populate the address\n  //   // fields in the form.\n  //   autocomplete.addListener('place_changed', fillInAddress);\n  // }\n\n  // function fillInAddress() {\n  //   // Get the place details from the autocomplete object.\n  //   var place = autocomplete.getPlace();\n\n  //   for (var component in componentForm) {\n  //     document.getElementById(component).value = '';\n  //     document.getElementById(component).disabled = false;\n  //   }\n\n  //   console.log('showing google object: ', place);\n  //   $scope.tempPlace = place;\n  //   console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n\n  //   // Get each component of the address from the place details\n  //   // and fill the corresponding field on the form.\n  //   for (var i = 0; i < place.address_components.length; i++) {\n  //     var addressType = place.address_components[i].types[0];\n  //     if (componentForm[addressType]) {\n  //       var val = place.address_components[i][componentForm[addressType]];\n  //       document.getElementById(addressType).value = val;\n  //     }\n  //   }\n\n  //   //Initiatin Input validation.\n  //   inputValidation();\n  // }\n\n  // // Bias the autocomplete object to the user's geographical location,\n  // // as supplied by the browser's 'navigator.geolocation' object.\n  // function geolocate() {\n\n  //   console.log('Functiong initiated');\n\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(function (position) {\n  //       var geolocation = {\n  //         lat: position.coords.latitude,\n  //         lng: position.coords.longitude\n  //       };\n  //       var circle = new google.maps.Circle({\n  //         center: geolocation,\n  //         radius: position.coords.accuracy\n  //       });\n  //       autocomplete.setBounds(circle.getBounds());\n  //     });\n  //   }\n  // }\n\n  // const inputValidation = () => {\n  //   for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n  //     if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n  //       $scope.city = $scope.tempPlace.address_components[index].long_name;\n  //     }\n\n  //     if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n  //       $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n  //     }\n\n  //     if ($scope.city === undefined && $scope.zipcode === undefined) {\n  //       alert('City or Zipcode is needed. Plase try again.');\n  //     }\n  //   }\n\n  //   console.info('Showing City info: ', $scope.city);\n  //   console.info('Showing Zipcode info: ', $scope.zipcode);\n  // };\n\n\n  // //Initiating Pre Render\n  // geolocate();\n  // initAutocomplete();\n\n\n  // // Google Scripts=====================================\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */\n\"use strict\";\n\nAA.controller(\"crimeCtrl\", function ($scope, crimeService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    crimeService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"homeValueCtrl\", function ($scope, homeValueService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    homeValueService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"hospitalCtrl\", function ($scope, hospitalService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    hospitalService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n\"use strict\";\n\nAA.controller(\"pollutionCtrl\", function ($scope, pollutionService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    pollutionService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"rentCtrl\", function ($scope, rentService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    rentService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n\n  //end of controller\n});\n\"use strict\";\n\nAA.controller(\"restaurantCtrl\", function ($scope, restaurantService) {\n\n  $scope.data;\n\n  $scope.getInfo = function () {\n    restaurantService.getData().then(function (response) {\n      console.log(response);\n      $scope.data = response;\n    });\n  };\n\n  $scope.getInfo();\n});\n'use strict';\n\n// Start: This is the doughnut chart directive =================================\nAA.directive('doughnutDirective', function () {\n  return {\n    restrict: 'E',\n    templateUrl: \"./../views/doughnut.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              lables: {\n                display: false\n              }\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\n// End: This is the doughnut chart directive ===================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\n// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html'\n  };\n});\n// End: This is the header directive ===========================================\n'use strict';\n\nAA.directive('pieDirective', function () {\n  return {\n    restrict: 'E', templateUrl: \"./../views/pie.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function link(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      var ctxDir = elem[0].children[0].children[0];\n\n      var myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(chartElement, {\n          type: type,\n          data: dataForChart,\n          options: {\n            legend: {\n              display: false,\n              lables: {\n                display: false\n              }\n            },\n            title: {\n              display: true,\n              text: 'Values displayed by property type.'\n            }\n            // scales: {\n            //   yAxes: [\n            //     {\n            //       ticks: {\n            //         beginAtZero: true\n            //       }\n            //     }\n            //   ]\n            // }\n          }\n        });\n      }\n\n      scope.$watch('type', function (newValue, oldValue, scope) {\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n    }\n  };\n});\n\"use strict\";\n\nAA.service(\"crimeService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/species\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"homeValueService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/people\";\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"hospitalService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/vehicles\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"pollutionService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/films\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});\n\"use strict\";\n\nAA.service(\"rentService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/planets\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  // end of service\n});\n\"use strict\";\n\nAA.service(\"restaurantService\", function ($http) {\n\n  var baseUrl = \"http://swapi.co/api/starships\";\n\n  this.getData = function () {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then(function (response) {\n      console.log(response.data.results);\n      return response.data.results;\n    });\n  };\n\n  //end of service\n});","/* ============================================================================= */\n/* ======================== Start: App JS ====================================== */\n/* ============================================================================= */\nconst AA = angular.module(\"data-dash\", []);\n/* ============================================================================= */\n/* ======================== End: App JS ======================================== */\n/* ============================================================================= */\n","/* ============================================================================= */\n/* ======================== Start: Main Controller ============================= */\n/* ============================================================================= */\nAA.controller(\"mainCtrl\", function ($scope, $interval) {\n\n  $scope.testing = \"it works\";\n\n  $scope.baseball = {\n    labels: [\"Pre\", \"Kinder\", \"Elemen\", \"Middle\", \"High\", \"Degree\", \"Masters\", \"PHD\"],\n    datasets: [{\n      label: '# of Votes',\n      data: [1290, 2283, 3092, 1532, 2111, 1003, 1487, 2645],\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.2)',\n        'rgba(165, 171, 175, 0.2)',\n        'rgba(4, 82, 160, 0.2)',\n        'rgba(14, 58, 102, 0.2)',\n        'rgba(128, 172, 216, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)',\n        'rgba(72, 72, 72, 0.2)'\n      ],\n      borderColor: [\n        'rgba(33, 125, 216, 1)',\n        'rgba(165, 171, 175, 1)',\n        'rgba(4, 82, 160, 1)',\n        'rgba(14, 58, 102, 1)',\n        'rgba(128, 172, 216, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)',\n        'rgba(72, 72, 72, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  $scope.lineData = {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'High',\n      data: [12, 29, 7, 17, 6, 8, 10],\n      backgroundColor: \"rgba(33, 125, 216, 0.4)\"\n    }, {\n      label: 'Low',\n      data: [2, 19, 3, 10, 2, 3, 7],\n      backgroundColor: \"rgba(14, 58, 102, 0.4)\"\n    }]\n  };\n\n  $scope.apple = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        \"#217DD8\",\n        \"#A5ABAF\",\n        \"#0452A0\",\n        \"#0E3A66\",\n        \"#80ACD8\",\n        \"#484848\",\n        \"#34495e\"\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.orange = {\n    labels: [\"4 BR Apt\", \"3 BR Apt\", \"2 BR Apt\", \"1 BR Apt\", \"Studio Apt\"],\n    datasets: [{\n      label: \"Population (millions)\",\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [978, 1267, 734, 784, 433]\n    }]\n  };\n\n  $scope.polar = {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    datasets: [{\n      backgroundColor: [\n        'rgba(33, 125, 216, 0.8)',\n        'rgba(165, 171, 175, 0.8)',\n        'rgba(4, 82, 160, 0.8)',\n        'rgba(14, 58, 102, 0.8)',\n        'rgba(128, 172, 216, 0.8)',\n        'rgba(72, 72, 72, 0.8)',\n        'rgba(72, 72, 72, 0.8)'\n      ],\n      data: [12, 19, 3, 17, 28, 24, 7]\n    }]\n  };\n\n  $scope.chart1Type = 'line';\n  $scope.chart2Type = 'bar';\n  $scope.chart3Type = 'pie';\n  $scope.chart4Type = 'doughnut';\n  $scope.chart5Type = 'polarArea';\n  $scope.chart6Type = 'radar';\n\n\n  //Google Scripts for Google Map. =====================================\n  //var map;\n\n  function initMap() {\n    $scope.map = new google.maps.Map(document.getElementById('googleMap'), {\n      center: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      zoom: 8\n    });\n  }\n  \n  //Initializing the map.\n  initMap();\n\n  //Google Scripts for Google Map. =====================================\n\n\n  // // Google Scripts for Auto Complete.=====================================\n  // //variables\n  // $scope.city;\n  // $scope.zipcode;\n  // $scope.tempPlace;\n\n  // // This example displays an address form, using the autocomplete feature\n  // // of the Google Places API to help users fill in the information.\n\n  // // This example requires the Places library. Include the libraries=places\n  // // parameter when you first load the API. For example:\n  // // <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\n\n  // var placeSearch, autocomplete;\n  // var componentForm = {\n  //   street_number: 'short_name',\n  //   route: 'long_name',\n  //   locality: 'long_name',\n  //   administrative_area_level_1: 'short_name',\n  //   country: 'long_name',\n  //   postal_code: 'short_name'\n  // };\n\n  // function initAutocomplete() {\n\n  //   //Clearing out previous variable.\n  //   $scope.city = '';\n  //   $scope.zipcode = '';\n\n\n  //   // Create the autocomplete object, restricting the search to geographical\n  //   // location types.\n  //   autocomplete = new google.maps.places.Autocomplete(\n  //     /** @type {!HTMLInputElement} */\n  //     (document.getElementById('autocomplete')), {\n  //       types: ['geocode']\n  //     });\n\n  //   // When the user selects an address from the dropdown, populate the address\n  //   // fields in the form.\n  //   autocomplete.addListener('place_changed', fillInAddress);\n  // }\n\n  // function fillInAddress() {\n  //   // Get the place details from the autocomplete object.\n  //   var place = autocomplete.getPlace();\n\n  //   for (var component in componentForm) {\n  //     document.getElementById(component).value = '';\n  //     document.getElementById(component).disabled = false;\n  //   }\n\n  //   console.log('showing google object: ', place);\n  //   $scope.tempPlace = place;\n  //   console.log('Testing the live change object: ', $scope.tempPlace.address_components[0].long_name);\n\n\n  //   // Get each component of the address from the place details\n  //   // and fill the corresponding field on the form.\n  //   for (var i = 0; i < place.address_components.length; i++) {\n  //     var addressType = place.address_components[i].types[0];\n  //     if (componentForm[addressType]) {\n  //       var val = place.address_components[i][componentForm[addressType]];\n  //       document.getElementById(addressType).value = val;\n  //     }\n  //   }\n\n  //   //Initiatin Input validation.\n  //   inputValidation();\n  // }\n\n  // // Bias the autocomplete object to the user's geographical location,\n  // // as supplied by the browser's 'navigator.geolocation' object.\n  // function geolocate() {\n\n  //   console.log('Functiong initiated');\n\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(function (position) {\n  //       var geolocation = {\n  //         lat: position.coords.latitude,\n  //         lng: position.coords.longitude\n  //       };\n  //       var circle = new google.maps.Circle({\n  //         center: geolocation,\n  //         radius: position.coords.accuracy\n  //       });\n  //       autocomplete.setBounds(circle.getBounds());\n  //     });\n  //   }\n  // }\n\n  // const inputValidation = () => {\n  //   for (var index = 0; index < $scope.tempPlace.address_components.length; index++) {\n  //     if ($scope.tempPlace.address_components[index].types[0] === 'locality') {\n  //       $scope.city = $scope.tempPlace.address_components[index].long_name;\n  //     }\n\n  //     if ($scope.tempPlace.address_components[index].types[0] === 'postal_code') {\n  //       $scope.zipcode = $scope.tempPlace.address_components[index].long_name;\n  //     }\n\n  //     if ($scope.city === undefined && $scope.zipcode === undefined) {\n  //       alert('City or Zipcode is needed. Plase try again.');\n  //     }\n  //   }\n\n  //   console.info('Showing City info: ', $scope.city);\n  //   console.info('Showing Zipcode info: ', $scope.zipcode);\n  // };\n\n\n\n  // //Initiating Pre Render\n  // geolocate();\n  // initAutocomplete();\n\n\n  // // Google Scripts=====================================\n\n\n\n\n  // $interval(() => {\n  //   $scope.$applyAsync(() => {\n  //     $scope.chart1Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     $scope.chart2Type = $scope.chart1Type === 'bar' ? 'line' : 'bar';\n  //     console.log($scope.chart1Type, $scope.chart2Type);\n  //     $scope.chart3Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart4Type = $scope.chart3Type === 'pie' ? 'doughnut' : 'pie';\n  //     $scope.chart5Type = $scope.chart5Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     $scope.chart6Type = $scope.chart6Type === 'polarArea' ? 'radar' : 'polarArea';\n  //     // $scope.baseball.labels = [\"Rojo\", \"Azul\", \"Yellow\", \"Green\", \"Purple\", \"Orange\", \"Test1\", \"Test2\"];\n  //   });\n  // }, 8000);\n\n\n});\n/* ============================================================================= */\n/* ======================== End: Main Controller =============================== */\n/* ============================================================================= */","AA.controller(\"crimeCtrl\", function($scope, crimeService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  crimeService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo(); \n\n\n\n//end of controller\n});\n","AA.controller(\"homeValueCtrl\", function($scope, homeValueService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  homeValueService.getData().then( (response) => {\n   console.log(response)\n    $scope.data = response;\n })\n}\n\n$scope.getInfo();\n\n\n\n//end of controller\n});\n","AA.controller(\"hospitalCtrl\", function($scope, hospitalService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  hospitalService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","AA.controller(\"pollutionCtrl\", function($scope, pollutionService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n pollutionService.getData().then( (response) => {\n   console.log(response);\n   $scope.data = response\n })\n}\n\n$scope.getInfo();\n\n//end of controller\n})\n","AA.controller(\"rentCtrl\", function($scope, rentService){\n\n$scope.data;\n\n\n$scope.getInfo = () => {\n  rentService.getData().then( (response) => {\n    console.log(response);\n      $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n//end of controller\n});\n","AA.controller(\"restaurantCtrl\", function($scope, restaurantService){\n\n$scope.data;\n\n$scope.getInfo = () => {\n  restaurantService.getData().then( (response) => {\n    console.log(response);\n    $scope.data = response;\n  })\n}\n\n$scope.getInfo();\n\n\n});\n","// Start: This is the doughnut chart directive =================================\nAA.directive('doughnutDirective', function() {\n  return {\n    restrict: 'E',\n    templateUrl: \"./../views/doughnut.html\",\n    // controller: 'dirCtrl',\n    scope: {\n      chartData: '=',\n      type: \"=\"\n    },\n    link: function(scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      let ctxDir = elem[0].children[0].children[0];\n\n      let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n      function getChartGivenData(chartElement, dataForChart, type) {\n        return new Chart(\n          chartElement,\n          {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display:false,\n                lables: {\n                  display: false\n                }\n              },\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              }\n            }\n          }\n        );\n      }\n\n      scope.$watch('type', function(newValue, oldValue, scope){\n        getChartGivenData(ctxDir, scope.chartData, newValue);\n      });\n\n    }\n  }\n});\n\n// End: This is the doughnut chart directive ===================================\n","// Start: This is the header directive =========================================\nAA.directive('footerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('headerDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","// Start: This is the header directive =========================================\nAA.directive('mapDirective', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/map.html',\n    // controller: 'mainCtrl'\n  };\n});\n// End: This is the header directive ===========================================\n","AA\n  .directive('pieDirective', function () {\n    return {\n      restrict: 'E', templateUrl: \"./../views/pie.html\",\n      // controller: 'dirCtrl',\n      scope: {\n        chartData: '=',\n        type: \"=\"\n      },\n      link: function (scope, elem, attrs, ctrl) {\n      console.log('this is my element\\'s second child:', elem[0].children[0].children[0]);\n\n      let ctxDir = elem[0].children[0].children[0];\n\n        let myChartDir = getChartGivenData(ctxDir, scope.chartData, scope.type);\n\n        function getChartGivenData(chartElement, dataForChart, type) {\n          return new Chart(chartElement, {\n            type: type,\n            data: dataForChart,\n            options: {\n              legend: {\n                display:false,\n                lables: {\n                  display: false\n                }\n              },\n              title: {\n                display: true,\n                text: 'Values displayed by property type.'\n              }\n              // scales: {\n              //   yAxes: [\n              //     {\n              //       ticks: {\n              //         beginAtZero: true\n              //       }\n              //     }\n              //   ]\n              // }\n            }\n          });\n        }\n\n        scope\n          .$watch('type', function (newValue, oldValue, scope) {\n            getChartGivenData(ctxDir, scope.chartData, newValue);\n          });\n\n      }\n    }\n  });\n","AA.service(\"crimeService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/species\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n//end of service\n});\n","AA.service(\"homeValueService\", function($http){\n\n  const baseUrl = \"http://swapi.co/api/people\"\n  //hitting Starwars Api for testing. Can delete when back end point is ready.\n\n  this.getData = () => {\n    return $http({\n      method: \"GET\",\n      url: baseUrl\n    }).then( (response) => {\n      console.log(response);\n      return response.data.results;\n    })\n  }\n\n\n\n//end of service\n});\n","AA.service(\"hospitalService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/vehicles\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n//end of service\n});\n","AA.service(\"pollutionService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/films\";\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n//end of service\n});\n","AA.service(\"rentService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/planets\";\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results\n  })\n}\n\n\n\n\n// end of service\n})\n","AA.service(\"restaurantService\", function($http){\n\nconst baseUrl = \"http://swapi.co/api/starships\"\n\n\nthis.getData = () => {\n  return $http({\n    method: \"GET\",\n    url: baseUrl\n  }).then( (response) => {\n    console.log(response.data.results);\n    return response.data.results;\n  })\n}\n\n\n\n//end of service\n});\n"]}